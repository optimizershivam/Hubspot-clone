{"ast":null,"code":"import { __rest } from 'tslib';\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, resolveVariantFromProps } from '../../render/utils/variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\n\nfunction makeState(_a, props, context, presenceContext) {\n  var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps,\n      createRenderState = _a.createRenderState,\n      onMount = _a.onMount;\n  var state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n    renderState: createRenderState()\n  };\n\n  if (onMount) {\n    state.mount = function (instance) {\n      return onMount(props, instance, state);\n    };\n  }\n\n  return state;\n}\n\nvar makeUseVisualState = function (config) {\n  return function (props, isStatic) {\n    var context = useContext(MotionContext);\n    var presenceContext = useContext(PresenceContext);\n    return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function () {\n      return makeState(config, props, context, presenceContext);\n    });\n  };\n};\n\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  var values = {};\n  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n  var motionValues = scrapeMotionValues(props);\n\n  for (var key in motionValues) {\n    values[key] = resolveMotionValue(motionValues[key]);\n  }\n\n  var initial = props.initial,\n      animate = props.animate;\n  var isControllingVariants = checkIfControllingVariants(props);\n  var isVariantNode = checkIfVariantNode(props);\n\n  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {\n    initial !== null && initial !== void 0 ? initial : initial = context.initial;\n    animate !== null && animate !== void 0 ? animate : animate = context.animate;\n  }\n\n  var initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n  var variantToSet = initialAnimationIsBlocked ? animate : initial;\n\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !isAnimationControls(variantToSet)) {\n    var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(function (definition) {\n      var resolved = resolveVariantFromProps(props, definition);\n      if (!resolved) return;\n      var transitionEnd = resolved.transitionEnd;\n      resolved.transition;\n\n      var target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n\n      for (var key in target) {\n        var valueTarget = target[key];\n\n        if (Array.isArray(valueTarget)) {\n          /**\n           * Take final keyframe if the initial animation is blocked because\n           * we want to initialise at the end of that blocked animation.\n           */\n          var index = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;\n          valueTarget = valueTarget[index];\n        }\n\n        if (valueTarget !== null) {\n          values[key] = valueTarget;\n        }\n      }\n\n      for (var key in transitionEnd) values[key] = transitionEnd[key];\n    });\n  }\n\n  return values;\n}\n\nexport { makeUseVisualState };","map":{"version":3,"names":["__rest","useContext","isAnimationControls","PresenceContext","checkIfControllingVariants","checkIfVariantNode","resolveVariantFromProps","useConstant","resolveMotionValue","MotionContext","makeState","_a","props","context","presenceContext","scrapeMotionValuesFromProps","createRenderState","onMount","state","latestValues","makeLatestValues","renderState","mount","instance","makeUseVisualState","config","isStatic","scrapeMotionValues","values","blockInitialAnimation","initial","motionValues","key","animate","isControllingVariants","isVariantNode","inherit","initialAnimationIsBlocked","variantToSet","list","Array","isArray","forEach","definition","resolved","transitionEnd","transition","target","valueTarget","index","length"],"sources":["C:/Users/Tejaswini Mahale/Desktop/Hubspot/hubspot/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs"],"sourcesContent":["import { __rest } from 'tslib';\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, resolveVariantFromProps } from '../../render/utils/variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\n\nfunction makeState(_a, props, context, presenceContext) {\n    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;\n    var state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = function (instance) { return onMount(props, instance, state); };\n    }\n    return state;\n}\nvar makeUseVisualState = function (config) {\n    return function (props, isStatic) {\n        var context = useContext(MotionContext);\n        var presenceContext = useContext(PresenceContext);\n        return isStatic\n            ? makeState(config, props, context, presenceContext)\n            : useConstant(function () {\n                return makeState(config, props, context, presenceContext);\n            });\n    };\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    var values = {};\n    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    var motionValues = scrapeMotionValues(props);\n    for (var key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    var initial = props.initial, animate = props.animate;\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    var initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n    var variantToSet = initialAnimationIsBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach(function (definition) {\n            var resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            var transitionEnd = resolved.transitionEnd; resolved.transition; var target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (var key in target) {\n                var valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    var index = initialAnimationIsBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (var key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}