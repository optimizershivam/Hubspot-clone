{"ast":null,"code":"import { __read } from 'tslib';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { scalePoint } from './delta-apply.mjs';\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\n\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n  point -= translate;\n  point = scalePoint(point, 1 / scale, originPoint);\n\n  if (boxScale !== undefined) {\n    point = scalePoint(point, 1 / boxScale, originPoint);\n  }\n\n  return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\n\n\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n\n  if (scale === void 0) {\n    scale = 1;\n  }\n\n  if (origin === void 0) {\n    origin = 0.5;\n  }\n\n  if (originAxis === void 0) {\n    originAxis = axis;\n  }\n\n  if (sourceAxis === void 0) {\n    sourceAxis = axis;\n  }\n\n  if (percent.test(translate)) {\n    translate = parseFloat(translate);\n    var relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n    translate = relativeProgress - sourceAxis.min;\n  }\n\n  if (typeof translate !== \"number\") return;\n  var originPoint = mix(originAxis.min, originAxis.max, origin);\n  if (axis === originAxis) originPoint -= translate;\n  axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n  axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\n\n\nfunction removeAxisTransforms(axis, transforms, _a, origin, sourceAxis) {\n  var _b = __read(_a, 3),\n      key = _b[0],\n      scaleKey = _b[1],\n      originKey = _b[2];\n\n  removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\n\n\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\n\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n  removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n  removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };","map":{"version":3,"names":["__read","mix","percent","scalePoint","removePointDelta","point","translate","scale","originPoint","boxScale","undefined","removeAxisDelta","axis","origin","originAxis","sourceAxis","test","parseFloat","relativeProgress","min","max","removeAxisTransforms","transforms","_a","_b","key","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","box","originBox","sourceBox","x","y"],"sources":["C:/Users/Tejaswini Mahale/Desktop/boorish-earthquake-4077/hubspot/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs"],"sourcesContent":["import { __read } from 'tslib';\nimport { mix } from 'popmotion';\nimport { percent } from 'style-value-types';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (origin === void 0) { origin = 0.5; }\n    if (originAxis === void 0) { originAxis = axis; }\n    if (sourceAxis === void 0) { sourceAxis = axis; }\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        var relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    var originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, _a, origin, sourceAxis) {\n    var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}