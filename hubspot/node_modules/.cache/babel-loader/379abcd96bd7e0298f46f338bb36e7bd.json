{"ast":null,"code":"import { useGridRowGroup as $lJcFS$useGridRowGroup, useGrid as $lJcFS$useGrid, GridKeyboardDelegate as $lJcFS$GridKeyboardDelegate, useGridCell as $lJcFS$useGridCell, useGridRow as $lJcFS$useGridRow, useGridSelectionCheckbox as $lJcFS$useGridSelectionCheckbox } from \"@react-aria/grid\";\nimport { announce as $lJcFS$announce } from \"@react-aria/live-announcer\";\nimport { useId as $lJcFS$useId, useDescription as $lJcFS$useDescription, useUpdateEffect as $lJcFS$useUpdateEffect, mergeProps as $lJcFS$mergeProps, isAndroid as $lJcFS$isAndroid } from \"@react-aria/utils\";\nimport { useMemo as $lJcFS$useMemo } from \"react\";\nimport { useCollator as $lJcFS$useCollator, useLocale as $lJcFS$useLocale, useMessageFormatter as $lJcFS$useMessageFormatter } from \"@react-aria/i18n\";\nimport { useFocusable as $lJcFS$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $lJcFS$usePress } from \"@react-aria/interactions\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $6e31608fbba75bab$exports = {};\n$parcel$export($6e31608fbba75bab$exports, \"useTable\", () => $6e31608fbba75bab$export$25bceaac3c7e4dc7);\nconst $2140fb2337097f2d$export$552312adfd451dab = new WeakMap();\n\nfunction $2140fb2337097f2d$var$normalizeKey(key) {\n  if (typeof key === 'string') return key.replace(/\\s*/g, '');\n  return '' + key;\n}\n\nfunction $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\n\nfunction $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\n\nfunction $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)).join(' ');\n}\n\nvar $ae7e9c471762b4d3$exports = {};\nvar $ce3de3ff2fd66848$exports = {};\n$ce3de3ff2fd66848$exports = JSON.parse(\"{\\\"ascending\\\":\\\"تصاعدي\\\",\\\"ascendingSort\\\":\\\"ترتيب حسب العمود {columnName} بترتيب تصاعدي\\\",\\\"descending\\\":\\\"تنازلي\\\",\\\"descendingSort\\\":\\\"ترتيب حسب العمود {columnName} بترتيب تنازلي\\\",\\\"select\\\":\\\"تحديد\\\",\\\"selectAll\\\":\\\"تحديد الكل\\\",\\\"sortable\\\":\\\"عمود قابل للترتيب\\\"}\");\nvar $cb80dcce530985b9$exports = {};\n$cb80dcce530985b9$exports = JSON.parse(\"{\\\"ascending\\\":\\\"възходящ\\\",\\\"ascendingSort\\\":\\\"сортирано по колона {columnName} във възходящ ред\\\",\\\"descending\\\":\\\"низходящ\\\",\\\"descendingSort\\\":\\\"сортирано по колона {columnName} в низходящ ред\\\",\\\"select\\\":\\\"Изберете\\\",\\\"selectAll\\\":\\\"Изберете всичко\\\",\\\"sortable\\\":\\\"сортираща колона\\\"}\");\nvar $68ac86749db4c0fb$exports = {};\n$68ac86749db4c0fb$exports = JSON.parse(\"{\\\"ascending\\\":\\\"vzestupně\\\",\\\"ascendingSort\\\":\\\"řazeno vzestupně podle sloupce {columnName}\\\",\\\"descending\\\":\\\"sestupně\\\",\\\"descendingSort\\\":\\\"řazeno sestupně podle sloupce {columnName}\\\",\\\"select\\\":\\\"Vybrat\\\",\\\"selectAll\\\":\\\"Vybrat vše\\\",\\\"sortable\\\":\\\"sloupec s možností řazení\\\"}\");\nvar $9a6cbac08487e661$exports = {};\n$9a6cbac08487e661$exports = JSON.parse(\"{\\\"ascending\\\":\\\"stigende\\\",\\\"ascendingSort\\\":\\\"sorteret efter kolonne {columnName} i stigende rækkefølge\\\",\\\"descending\\\":\\\"faldende\\\",\\\"descendingSort\\\":\\\"sorteret efter kolonne {columnName} i faldende rækkefølge\\\",\\\"select\\\":\\\"Vælg\\\",\\\"selectAll\\\":\\\"Vælg alle\\\",\\\"sortable\\\":\\\"sorterbar kolonne\\\"}\");\nvar $c963661d89486e72$exports = {};\n$c963661d89486e72$exports = JSON.parse(\"{\\\"ascending\\\":\\\"aufsteigend\\\",\\\"ascendingSort\\\":\\\"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\\\",\\\"descending\\\":\\\"absteigend\\\",\\\"descendingSort\\\":\\\"sortiert nach Spalte {columnName} in absteigender Reihenfolge\\\",\\\"select\\\":\\\"Auswählen\\\",\\\"selectAll\\\":\\\"Alles auswählen\\\",\\\"sortable\\\":\\\"sortierbare Spalte\\\"}\");\nvar $ac03861c6e8605f4$exports = {};\n$ac03861c6e8605f4$exports = JSON.parse(\"{\\\"ascending\\\":\\\"αύξουσα\\\",\\\"ascendingSort\\\":\\\"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\\\",\\\"descending\\\":\\\"φθίνουσα\\\",\\\"descendingSort\\\":\\\"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\\\",\\\"select\\\":\\\"Επιλογή\\\",\\\"selectAll\\\":\\\"Επιλογή όλων\\\",\\\"sortable\\\":\\\"Στήλη διαλογής\\\"}\");\nvar $09e6b82e0d6e466a$exports = {};\n$09e6b82e0d6e466a$exports = JSON.parse(\"{\\\"select\\\":\\\"Select\\\",\\\"selectAll\\\":\\\"Select All\\\",\\\"sortable\\\":\\\"sortable column\\\",\\\"ascending\\\":\\\"ascending\\\",\\\"descending\\\":\\\"descending\\\",\\\"ascendingSort\\\":\\\"sorted by column {columnName} in ascending order\\\",\\\"descendingSort\\\":\\\"sorted by column {columnName} in descending order\\\"}\");\nvar $8cc39eb66c2bf220$exports = {};\n$8cc39eb66c2bf220$exports = JSON.parse(\"{\\\"ascending\\\":\\\"de subida\\\",\\\"ascendingSort\\\":\\\"ordenado por columna {columnName} en orden de subida\\\",\\\"descending\\\":\\\"de bajada\\\",\\\"descendingSort\\\":\\\"ordenado por columna {columnName} en orden de bajada\\\",\\\"select\\\":\\\"Seleccionar\\\",\\\"selectAll\\\":\\\"Seleccionar todos\\\",\\\"sortable\\\":\\\"columna ordenable\\\"}\");\nvar $4e11db3c25a38112$exports = {};\n$4e11db3c25a38112$exports = JSON.parse(\"{\\\"ascending\\\":\\\"tõusev järjestus\\\",\\\"ascendingSort\\\":\\\"sorditud veeru järgi {columnName} tõusvas järjestuses\\\",\\\"descending\\\":\\\"laskuv järjestus\\\",\\\"descendingSort\\\":\\\"sorditud veeru järgi {columnName} laskuvas järjestuses\\\",\\\"select\\\":\\\"Vali\\\",\\\"selectAll\\\":\\\"Vali kõik\\\",\\\"sortable\\\":\\\"sorditav veerg\\\"}\");\nvar $da1e751a92575e02$exports = {};\n$da1e751a92575e02$exports = JSON.parse(\"{\\\"ascending\\\":\\\"nouseva\\\",\\\"ascendingSort\\\":\\\"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\\\",\\\"descending\\\":\\\"laskeva\\\",\\\"descendingSort\\\":\\\"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\\\",\\\"select\\\":\\\"Valitse\\\",\\\"selectAll\\\":\\\"Valitse kaikki\\\",\\\"sortable\\\":\\\"lajiteltava sarake\\\"}\");\nvar $1b5d6c6c47d55106$exports = {};\n$1b5d6c6c47d55106$exports = JSON.parse(\"{\\\"ascending\\\":\\\"croissant\\\",\\\"ascendingSort\\\":\\\"trié en fonction de la colonne {columnName} par ordre croissant\\\",\\\"descending\\\":\\\"décroissant\\\",\\\"descendingSort\\\":\\\"trié en fonction de la colonne {columnName} par ordre décroissant\\\",\\\"select\\\":\\\"Sélectionner\\\",\\\"selectAll\\\":\\\"Sélectionner tout\\\",\\\"sortable\\\":\\\"colonne triable\\\"}\");\nvar $7c18ba27b86d3308$exports = {};\n$7c18ba27b86d3308$exports = JSON.parse(\"{\\\"ascending\\\":\\\"עולה\\\",\\\"ascendingSort\\\":\\\"מוין לפי עמודה {columnName} בסדר עולה\\\",\\\"descending\\\":\\\"יורד\\\",\\\"descendingSort\\\":\\\"מוין לפי עמודה {columnName} בסדר יורד\\\",\\\"select\\\":\\\"בחר\\\",\\\"selectAll\\\":\\\"בחר הכול\\\",\\\"sortable\\\":\\\"עמודה שניתן למיין\\\"}\");\nvar $2cb40998e20e8a46$exports = {};\n$2cb40998e20e8a46$exports = JSON.parse(\"{\\\"ascending\\\":\\\"rastući\\\",\\\"ascendingSort\\\":\\\"razvrstano po stupcima {columnName} rastućem redoslijedom\\\",\\\"descending\\\":\\\"padajući\\\",\\\"descendingSort\\\":\\\"razvrstano po stupcima {columnName} padajućim redoslijedom\\\",\\\"select\\\":\\\"Odaberite\\\",\\\"selectAll\\\":\\\"Odaberite sve\\\",\\\"sortable\\\":\\\"stupac koji se može razvrstati\\\"}\");\nvar $189e23eec1d6aa3a$exports = {};\n$189e23eec1d6aa3a$exports = JSON.parse(\"{\\\"ascending\\\":\\\"növekvő\\\",\\\"ascendingSort\\\":\\\"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\\\",\\\"descending\\\":\\\"csökkenő\\\",\\\"descendingSort\\\":\\\"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\\\",\\\"select\\\":\\\"Kijelölés\\\",\\\"selectAll\\\":\\\"Összes kijelölése\\\",\\\"sortable\\\":\\\"rendezendő oszlop\\\"}\");\nvar $3c5ec8e4f015dfd0$exports = {};\n$3c5ec8e4f015dfd0$exports = JSON.parse(\"{\\\"ascending\\\":\\\"crescente\\\",\\\"ascendingSort\\\":\\\"in ordine crescente in base alla colonna {columnName}\\\",\\\"descending\\\":\\\"decrescente\\\",\\\"descendingSort\\\":\\\"in ordine decrescente in base alla colonna {columnName}\\\",\\\"select\\\":\\\"Seleziona\\\",\\\"selectAll\\\":\\\"Seleziona tutto\\\",\\\"sortable\\\":\\\"colonna ordinabile\\\"}\");\nvar $d021d50e6b315ebb$exports = {};\n$d021d50e6b315ebb$exports = JSON.parse(\"{\\\"ascending\\\":\\\"昇順\\\",\\\"ascendingSort\\\":\\\"列 {columnName} を昇順で並べ替え\\\",\\\"descending\\\":\\\"降順\\\",\\\"descendingSort\\\":\\\"列 {columnName} を降順で並べ替え\\\",\\\"select\\\":\\\"選択\\\",\\\"selectAll\\\":\\\"すべて選択\\\",\\\"sortable\\\":\\\"並べ替え可能な列\\\"}\");\nvar $52535c35c24ec937$exports = {};\n$52535c35c24ec937$exports = JSON.parse(\"{\\\"ascending\\\":\\\"오름차순\\\",\\\"ascendingSort\\\":\\\"{columnName} 열을 기준으로 오름차순으로 정렬됨\\\",\\\"descending\\\":\\\"내림차순\\\",\\\"descendingSort\\\":\\\"{columnName} 열을 기준으로 내림차순으로 정렬됨\\\",\\\"select\\\":\\\"선택\\\",\\\"selectAll\\\":\\\"모두 선택\\\",\\\"sortable\\\":\\\"정렬 가능한 열\\\"}\");\nvar $b37ee03672edfd1d$exports = {};\n$b37ee03672edfd1d$exports = JSON.parse(\"{\\\"ascending\\\":\\\"didėjančia tvarka\\\",\\\"ascendingSort\\\":\\\"surikiuota pagal stulpelį {columnName} didėjančia tvarka\\\",\\\"descending\\\":\\\"mažėjančia tvarka\\\",\\\"descendingSort\\\":\\\"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\\\",\\\"select\\\":\\\"Pasirinkti\\\",\\\"selectAll\\\":\\\"Pasirinkti viską\\\",\\\"sortable\\\":\\\"rikiuojamas stulpelis\\\"}\");\nvar $c7df6686b4189d56$exports = {};\n$c7df6686b4189d56$exports = JSON.parse(\"{\\\"ascending\\\":\\\"augošā secībā\\\",\\\"ascendingSort\\\":\\\"kārtots pēc kolonnas {columnName} augošā secībā\\\",\\\"descending\\\":\\\"dilstošā secībā\\\",\\\"descendingSort\\\":\\\"kārtots pēc kolonnas {columnName} dilstošā secībā\\\",\\\"select\\\":\\\"Atlasīt\\\",\\\"selectAll\\\":\\\"Atlasīt visu\\\",\\\"sortable\\\":\\\"kārtojamā kolonna\\\"}\");\nvar $da07fe8ec87e6b68$exports = {};\n$da07fe8ec87e6b68$exports = JSON.parse(\"{\\\"ascending\\\":\\\"stigende\\\",\\\"ascendingSort\\\":\\\"sortert etter kolonne {columnName} i stigende rekkefølge\\\",\\\"descending\\\":\\\"synkende\\\",\\\"descendingSort\\\":\\\"sortert etter kolonne {columnName} i synkende rekkefølge\\\",\\\"select\\\":\\\"Velg\\\",\\\"selectAll\\\":\\\"Velg alle\\\",\\\"sortable\\\":\\\"kolonne som kan sorteres\\\"}\");\nvar $64b7e390f5791490$exports = {};\n$64b7e390f5791490$exports = JSON.parse(\"{\\\"ascending\\\":\\\"oplopend\\\",\\\"ascendingSort\\\":\\\"gesorteerd in oplopende volgorde in kolom {columnName}\\\",\\\"descending\\\":\\\"aflopend\\\",\\\"descendingSort\\\":\\\"gesorteerd in aflopende volgorde in kolom {columnName}\\\",\\\"select\\\":\\\"Selecteren\\\",\\\"selectAll\\\":\\\"Alles selecteren\\\",\\\"sortable\\\":\\\"sorteerbare kolom\\\"}\");\nvar $2a03621e773f1678$exports = {};\n$2a03621e773f1678$exports = JSON.parse(\"{\\\"ascending\\\":\\\"rosnąco\\\",\\\"ascendingSort\\\":\\\"posortowano według kolumny {columnName} w porządku rosnącym\\\",\\\"descending\\\":\\\"malejąco\\\",\\\"descendingSort\\\":\\\"posortowano według kolumny {columnName} w porządku malejącym\\\",\\\"select\\\":\\\"Zaznacz\\\",\\\"selectAll\\\":\\\"Zaznacz wszystko\\\",\\\"sortable\\\":\\\"kolumna z możliwością sortowania\\\"}\");\nvar $0a79c0aba9e5ecc6$exports = {};\n$0a79c0aba9e5ecc6$exports = JSON.parse(\"{\\\"ascending\\\":\\\"crescente\\\",\\\"ascendingSort\\\":\\\"classificado pela coluna {columnName} em ordem crescente\\\",\\\"descending\\\":\\\"decrescente\\\",\\\"descendingSort\\\":\\\"classificado pela coluna {columnName} em ordem decrescente\\\",\\\"select\\\":\\\"Selecionar\\\",\\\"selectAll\\\":\\\"Selecionar tudo\\\",\\\"sortable\\\":\\\"coluna classificável\\\"}\");\nvar $de7b4d0f7dc86fc8$exports = {};\n$de7b4d0f7dc86fc8$exports = JSON.parse(\"{\\\"ascending\\\":\\\"ascendente\\\",\\\"ascendingSort\\\":\\\"Ordenar por coluna {columnName} em ordem ascendente\\\",\\\"descending\\\":\\\"descendente\\\",\\\"descendingSort\\\":\\\"Ordenar por coluna {columnName} em ordem descendente\\\",\\\"select\\\":\\\"Selecionar\\\",\\\"selectAll\\\":\\\"Selecionar tudo\\\",\\\"sortable\\\":\\\"Coluna ordenável\\\"}\");\nvar $28ea7e849d77bd1c$exports = {};\n$28ea7e849d77bd1c$exports = JSON.parse(\"{\\\"ascending\\\":\\\"crescătoare\\\",\\\"ascendingSort\\\":\\\"sortate după coloana {columnName} în ordine crescătoare\\\",\\\"descending\\\":\\\"descrescătoare\\\",\\\"descendingSort\\\":\\\"sortate după coloana {columnName} în ordine descrescătoare\\\",\\\"select\\\":\\\"Selectare\\\",\\\"selectAll\\\":\\\"Selectare totală\\\",\\\"sortable\\\":\\\"coloană sortabilă\\\"}\");\nvar $9a09321cf046b187$exports = {};\n$9a09321cf046b187$exports = JSON.parse(\"{\\\"ascending\\\":\\\"возрастание\\\",\\\"ascendingSort\\\":\\\"сортировать столбец {columnName} в порядке возрастания\\\",\\\"descending\\\":\\\"убывание\\\",\\\"descendingSort\\\":\\\"сортировать столбец {columnName} в порядке убывания\\\",\\\"select\\\":\\\"Выбрать\\\",\\\"selectAll\\\":\\\"Выбрать все\\\",\\\"sortable\\\":\\\"сортируемый столбец\\\"}\");\nvar $5afe469a63fcac7b$exports = {};\n$5afe469a63fcac7b$exports = JSON.parse(\"{\\\"ascending\\\":\\\"vzostupne\\\",\\\"ascendingSort\\\":\\\"zoradené zostupne podľa stĺpca {columnName}\\\",\\\"descending\\\":\\\"zostupne\\\",\\\"descendingSort\\\":\\\"zoradené zostupne podľa stĺpca {columnName}\\\",\\\"select\\\":\\\"Vybrať\\\",\\\"selectAll\\\":\\\"Vybrať všetko\\\",\\\"sortable\\\":\\\"zoraditeľný stĺpec\\\"}\");\nvar $2956757ac31a7ce2$exports = {};\n$2956757ac31a7ce2$exports = JSON.parse(\"{\\\"ascending\\\":\\\"naraščajoče\\\",\\\"ascendingSort\\\":\\\"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\\\",\\\"descending\\\":\\\"padajoče\\\",\\\"descendingSort\\\":\\\"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\\\",\\\"select\\\":\\\"Izberite\\\",\\\"selectAll\\\":\\\"Izberite vse\\\",\\\"sortable\\\":\\\"razvrstljivi stolpec\\\"}\");\nvar $cedee0e66b175529$exports = {};\n$cedee0e66b175529$exports = JSON.parse(\"{\\\"ascending\\\":\\\"rastući\\\",\\\"ascendingSort\\\":\\\"sortirano po kolonama {columnName} rastućim redosledom\\\",\\\"descending\\\":\\\"padajući\\\",\\\"descendingSort\\\":\\\"sortirano po kolonama {columnName} padajućim redosledom\\\",\\\"select\\\":\\\"Izaberite\\\",\\\"selectAll\\\":\\\"Izaberite sve\\\",\\\"sortable\\\":\\\"kolona koja se može sortirati\\\"}\");\nvar $6db19998ba4427da$exports = {};\n$6db19998ba4427da$exports = JSON.parse(\"{\\\"ascending\\\":\\\"stigande\\\",\\\"ascendingSort\\\":\\\"sorterat på kolumn {columnName} i stigande ordning\\\",\\\"descending\\\":\\\"fallande\\\",\\\"descendingSort\\\":\\\"sorterat på kolumn {columnName} i fallande ordning\\\",\\\"select\\\":\\\"Markera\\\",\\\"selectAll\\\":\\\"Markera allt\\\",\\\"sortable\\\":\\\"sorterbar kolumn\\\"}\");\nvar $166b7c9cc1adb1a1$exports = {};\n$166b7c9cc1adb1a1$exports = JSON.parse(\"{\\\"ascending\\\":\\\"artan sırada\\\",\\\"ascendingSort\\\":\\\"{columnName} sütuna göre artan düzende sırala\\\",\\\"descending\\\":\\\"azalan sırada\\\",\\\"descendingSort\\\":\\\"{columnName} sütuna göre azalan düzende sırala\\\",\\\"select\\\":\\\"Seç\\\",\\\"selectAll\\\":\\\"Tümünü Seç\\\",\\\"sortable\\\":\\\"Sıralanabilir sütun\\\"}\");\nvar $c7ab180b401e49ff$exports = {};\n$c7ab180b401e49ff$exports = JSON.parse(\"{\\\"ascending\\\":\\\"висхідний\\\",\\\"ascendingSort\\\":\\\"відсортовано за стовпцем {columnName} у висхідному порядку\\\",\\\"descending\\\":\\\"низхідний\\\",\\\"descendingSort\\\":\\\"відсортовано за стовпцем {columnName} у низхідному порядку\\\",\\\"select\\\":\\\"Вибрати\\\",\\\"selectAll\\\":\\\"Вибрати все\\\",\\\"sortable\\\":\\\"сортувальний стовпець\\\"}\");\nvar $1648ec00941567f3$exports = {};\n$1648ec00941567f3$exports = JSON.parse(\"{\\\"ascending\\\":\\\"升序\\\",\\\"ascendingSort\\\":\\\"按列 {columnName} 升序排序\\\",\\\"descending\\\":\\\"降序\\\",\\\"descendingSort\\\":\\\"按列 {columnName} 降序排序\\\",\\\"select\\\":\\\"选择\\\",\\\"selectAll\\\":\\\"全选\\\",\\\"sortable\\\":\\\"可排序的列\\\"}\");\nvar $b26f22384b3c1526$exports = {};\n$b26f22384b3c1526$exports = JSON.parse(\"{\\\"ascending\\\":\\\"遞增\\\",\\\"ascendingSort\\\":\\\"已依據「{columnName}」欄遞增排序\\\",\\\"descending\\\":\\\"遞減\\\",\\\"descendingSort\\\":\\\"已依據「{columnName}」欄遞減排序\\\",\\\"select\\\":\\\"選取\\\",\\\"selectAll\\\":\\\"全選\\\",\\\"sortable\\\":\\\"可排序的欄\\\"}\");\n$ae7e9c471762b4d3$exports = {\n  \"ar-AE\": $ce3de3ff2fd66848$exports,\n  \"bg-BG\": $cb80dcce530985b9$exports,\n  \"cs-CZ\": $68ac86749db4c0fb$exports,\n  \"da-DK\": $9a6cbac08487e661$exports,\n  \"de-DE\": $c963661d89486e72$exports,\n  \"el-GR\": $ac03861c6e8605f4$exports,\n  \"en-US\": $09e6b82e0d6e466a$exports,\n  \"es-ES\": $8cc39eb66c2bf220$exports,\n  \"et-EE\": $4e11db3c25a38112$exports,\n  \"fi-FI\": $da1e751a92575e02$exports,\n  \"fr-FR\": $1b5d6c6c47d55106$exports,\n  \"he-IL\": $7c18ba27b86d3308$exports,\n  \"hr-HR\": $2cb40998e20e8a46$exports,\n  \"hu-HU\": $189e23eec1d6aa3a$exports,\n  \"it-IT\": $3c5ec8e4f015dfd0$exports,\n  \"ja-JP\": $d021d50e6b315ebb$exports,\n  \"ko-KR\": $52535c35c24ec937$exports,\n  \"lt-LT\": $b37ee03672edfd1d$exports,\n  \"lv-LV\": $c7df6686b4189d56$exports,\n  \"nb-NO\": $da07fe8ec87e6b68$exports,\n  \"nl-NL\": $64b7e390f5791490$exports,\n  \"pl-PL\": $2a03621e773f1678$exports,\n  \"pt-BR\": $0a79c0aba9e5ecc6$exports,\n  \"pt-PT\": $de7b4d0f7dc86fc8$exports,\n  \"ro-RO\": $28ea7e849d77bd1c$exports,\n  \"ru-RU\": $9a09321cf046b187$exports,\n  \"sk-SK\": $5afe469a63fcac7b$exports,\n  \"sl-SI\": $2956757ac31a7ce2$exports,\n  \"sr-SP\": $cedee0e66b175529$exports,\n  \"sv-SE\": $6db19998ba4427da$exports,\n  \"tr-TR\": $166b7c9cc1adb1a1$exports,\n  \"uk-UA\": $c7ab180b401e49ff$exports,\n  \"zh-CN\": $1648ec00941567f3$exports,\n  \"zh-TW\": $b26f22384b3c1526$exports\n};\n\nclass $0ba3c81c7f1caedd$export$da43f8f5cb04028d extends $lJcFS$GridKeyboardDelegate {\n  isCell(node) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) return child.key;\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) return;\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return; // If focus was on a column, focus the parent column if any\n\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') return parent.key;\n      return;\n    } // only return above row key if not header row\n\n\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') return superKey; // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n\n    if (this.isCell(startItem)) return this.collection.columns[startItem.index].key; // If focus was on a row, then focus the first column header.\n\n    return this.collection.columns[0].key;\n  }\n\n  findNextColumnKey(column) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) return key; // Wrap around to the first column\n\n    let row = this.collection.headerRows[column.level];\n\n    for (let item1 of row.childNodes) {\n      if (item1.type === 'column') return item1.key;\n    }\n  }\n\n  findPreviousColumnKey(column) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) return key; // Wrap around to the last column\n\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') return item.key;\n    }\n  }\n\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus was on a column, then focus the next column\n\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return; // If focus was on a column, then focus the previous column\n\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n    if (key == null) return null; // If the starting key is a cell, search from its parent row.\n\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') key = startItem.parentKey;\n    let hasWrapped = false;\n\n    while (key != null) {\n      let item = collection.getItem(key); // Check each of the row header cells in this row for a match\n\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell' ? cell.key : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key); // Wrap around when reaching the end of the collection\n\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n\n}\n\nfunction $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref1) {\n  let {\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized,\n    layout: layout\n  } = props; // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n\n  let collator = $lJcFS$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    direction: direction\n  } = $lJcFS$useLocale();\n  let delegate = $lJcFS$useMemo(() => keyboardDelegate || new $0ba3c81c7f1caedd$export$da43f8f5cb04028d({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref1,\n    direction: direction,\n    collator: collator,\n    layout: layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref1, direction, collator, layout]);\n  let id = $lJcFS$useId();\n  $2140fb2337097f2d$export$552312adfd451dab.set(state, id);\n  let {\n    gridProps: gridProps\n  } = $lJcFS$useGrid({ ...props,\n    id: id,\n    keyboardDelegate: delegate,\n\n    getRowText(key) {\n      let added = state.collection.getItem(key);\n      if (!added) return ''; // If the row has a textValue, use that.\n\n      if (added.textValue != null) return added.textValue; // Otherwise combine the text of each of the row header columns.\n\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n\n      if (rowHeaderColumnKeys) {\n        let text = [];\n\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);\n          if (text.length === rowHeaderColumnKeys.size) break;\n        }\n\n        return text.join(' ');\n      }\n\n      return '';\n    }\n\n  }, state, ref1); // Override to include header rows\n\n  if (isVirtualized) gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  let {\n    column: column1,\n    direction: sortDirection\n  } = state.sortDescriptor || {};\n  let formatMessage = $lJcFS$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription = $lJcFS$useMemo(() => {\n    var ref;\n    let columnName = (ref = state.collection.columns.find(c => c.key === column1)) === null || ref === void 0 ? void 0 : ref.textValue;\n    return sortDirection && column1 ? formatMessage(`${sortDirection}Sort`, {\n      columnName: columnName\n    }) : undefined;\n  }, [sortDirection, column1, state.collection.columns]);\n  let descriptionProps = $lJcFS$useDescription(sortDescription); // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n\n  $lJcFS$useUpdateEffect(() => {\n    $lJcFS$announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n  return {\n    gridProps: $lJcFS$mergeProps(gridProps, descriptionProps, {\n      // merge sort description with long press information\n      'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n    })\n  };\n}\n\nvar $f329116d8ad0aba0$exports = {};\n$parcel$export($f329116d8ad0aba0$exports, \"useTableColumnHeader\", () => $f329116d8ad0aba0$export$9514819a8c81e960);\n\nfunction $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {\n  var ref1, ref2;\n  let {\n    node: node\n  } = props; // let allowsResizing = node.props.allowsResizing;\n\n  let allowsSorting = node.props.allowsSorting;\n  let {\n    gridCellProps: gridCellProps\n  } = $lJcFS$useGridCell(props, state, ref);\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n  let {\n    pressProps: pressProps\n  } = $lJcFS$usePress({\n    // Disabled for allowsResizing because if resizing is allowed, a menu trigger is added to the column header.\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n\n    onPress() {\n      state.sort(node.key);\n    }\n\n  }); // Needed to pick up the focusable context, enabling things like Tooltips for example\n\n  let {\n    focusableProps: focusableProps\n  } = $lJcFS$useFocusable({}, ref);\n  let ariaSort = null;\n  let isSortedColumn = ((ref1 = state.sortDescriptor) === null || ref1 === void 0 ? void 0 : ref1.column) === node.key;\n  let sortDirection = (ref2 = state.sortDescriptor) === null || ref2 === void 0 ? void 0 : ref2.direction; // aria-sort not supported in Android Talkback\n\n  if (node.props.allowsSorting && !$lJcFS$isAndroid()) ariaSort = isSortedColumn ? sortDirection : 'none';\n  let formatMessage = $lJcFS$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription;\n\n  if (allowsSorting) {\n    sortDescription = `${formatMessage('sortable')}`; // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n\n    if (isSortedColumn && sortDirection && $lJcFS$isAndroid()) sortDescription = `${sortDescription}, ${formatMessage(sortDirection)}`;\n  }\n\n  let descriptionProps = $lJcFS$useDescription(sortDescription);\n  return {\n    columnHeaderProps: { ...$lJcFS$mergeProps(gridCellProps, pressProps, focusableProps, descriptionProps),\n      role: 'columnheader',\n      id: $2140fb2337097f2d$export$37cd4213f2ad742e(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\n\nvar $b2db214c022798eb$exports = {};\n$parcel$export($b2db214c022798eb$exports, \"useTableRow\", () => $b2db214c022798eb$export$7f2f6ae19e707aa5);\n\nfunction $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {\n  let {\n    node: node\n  } = props;\n  let {\n    rowProps: rowProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridRow(props, state, ref);\n  return {\n    rowProps: { ...rowProps,\n      'aria-labelledby': $2140fb2337097f2d$export$85069b70317f543(state, node.key)\n    },\n    isPressed: isPressed\n  };\n}\n\nvar $f917ee10f4c32dab$exports = {};\n$parcel$export($f917ee10f4c32dab$exports, \"useTableHeaderRow\", () => $f917ee10f4c32dab$export$1b95a7d2d517b841);\n\nfunction $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let rowProps = {\n    role: 'row'\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n\n  return {\n    rowProps: rowProps\n  };\n}\n\nvar $7713593715703b24$exports = {};\n$parcel$export($7713593715703b24$exports, \"useTableCell\", () => $7713593715703b24$export$49571c903d73624c);\n\nfunction $7713593715703b24$export$49571c903d73624c(props, state, ref) {\n  let {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridCell(props, state, ref);\n  let columnKey = props.node.column.key;\n\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = $2140fb2337097f2d$export$19baff3266315d44(state, props.node.parentKey, columnKey);\n  }\n\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\n\nvar $2a795c53a101c542$exports = {};\n$parcel$export($2a795c53a101c542$exports, \"useTableSelectionCheckbox\", () => $2a795c53a101c542$export$16ea7f650bd7c1bb);\n$parcel$export($2a795c53a101c542$exports, \"useTableSelectAllCheckbox\", () => $2a795c53a101c542$export$1003db6a7e384b99);\n\nfunction $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {\n  let {\n    key: key\n  } = props;\n  const {\n    checkboxProps: checkboxProps\n  } = $lJcFS$useGridSelectionCheckbox(props, state);\n  return {\n    checkboxProps: { ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${$2140fb2337097f2d$export$85069b70317f543(state, key)}`\n    }\n  };\n}\n\nfunction $2a795c53a101c542$export$1003db6a7e384b99(state) {\n  let {\n    isEmpty: isEmpty,\n    isSelectAll: isSelectAll,\n    selectionMode: selectionMode\n  } = state.selectionManager;\n  const formatMessage = $lJcFS$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  return {\n    checkboxProps: {\n      'aria-label': formatMessage(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple',\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n\nfunction $0047e6c294ea075f$export$6fb1613bd7b28198() {\n  return $lJcFS$useGridRowGroup();\n}\n\nexport { $0047e6c294ea075f$export$6fb1613bd7b28198 as useTableRowGroup, $6e31608fbba75bab$export$25bceaac3c7e4dc7 as useTable, $f329116d8ad0aba0$export$9514819a8c81e960 as useTableColumnHeader, $b2db214c022798eb$export$7f2f6ae19e707aa5 as useTableRow, $f917ee10f4c32dab$export$1b95a7d2d517b841 as useTableHeaderRow, $7713593715703b24$export$49571c903d73624c as useTableCell, $2a795c53a101c542$export$16ea7f650bd7c1bb as useTableSelectionCheckbox, $2a795c53a101c542$export$1003db6a7e384b99 as useTableSelectAllCheckbox };","map":{"version":3,"mappings":"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","names":["$2140fb2337097f2d$export$552312adfd451dab","WeakMap","$2140fb2337097f2d$var$normalizeKey","key","replace","$2140fb2337097f2d$export$37cd4213f2ad742e","state","columnKey","gridId","get","Error","$2140fb2337097f2d$export$19baff3266315d44","rowKey","$2140fb2337097f2d$export$85069b70317f543","collection","rowHeaderColumnKeys","map","join","$ce3de3ff2fd66848$exports","JSON","parse","$cb80dcce530985b9$exports","$68ac86749db4c0fb$exports","$9a6cbac08487e661$exports","$c963661d89486e72$exports","$ac03861c6e8605f4$exports","$09e6b82e0d6e466a$exports","$8cc39eb66c2bf220$exports","$4e11db3c25a38112$exports","$da1e751a92575e02$exports","$1b5d6c6c47d55106$exports","$7c18ba27b86d3308$exports","$2cb40998e20e8a46$exports","$189e23eec1d6aa3a$exports","$3c5ec8e4f015dfd0$exports","$d021d50e6b315ebb$exports","$52535c35c24ec937$exports","$b37ee03672edfd1d$exports","$c7df6686b4189d56$exports","$da07fe8ec87e6b68$exports","$64b7e390f5791490$exports","$2a03621e773f1678$exports","$0a79c0aba9e5ecc6$exports","$de7b4d0f7dc86fc8$exports","$28ea7e849d77bd1c$exports","$9a09321cf046b187$exports","$5afe469a63fcac7b$exports","$2956757ac31a7ce2$exports","$cedee0e66b175529$exports","$6db19998ba4427da$exports","$166b7c9cc1adb1a1$exports","$c7ab180b401e49ff$exports","$1648ec00941567f3$exports","$b26f22384b3c1526$exports","$ae7e9c471762b4d3$exports","$0ba3c81c7f1caedd$export$da43f8f5cb04028d","$lJcFS$GridKeyboardDelegate","isCell","node","type","getKeyBelow","startItem","getItem","child","childNodes","firstKey","getFirstKey","firstItem","index","getKeyAbove","parent","parentKey","superKey","columns","findNextColumnKey","column","findNextKey","item","row","headerRows","level","item1","findPreviousColumnKey","findPreviousKey","i","length","getKeyRightOf","direction","getKeyLeftOf","getKeyForSearch","search","fromKey","collator","hasWrapped","cell","has","textValue","substring","slice","compare","fromItem","$6e31608fbba75bab$export$25bceaac3c7e4dc7","props","ref1","keyboardDelegate","isVirtualized","layout","$lJcFS$useCollator","usage","sensitivity","$lJcFS$useLocale","delegate","$lJcFS$useMemo","disabledKeys","id","$lJcFS$useId","set","gridProps","$lJcFS$useGrid","getRowText","added","text","push","size","sortDirection","sortDescriptor","formatMessage","$lJcFS$useMessageFormatter","sortDescription","ref","columnName","find","c","column1","undefined","descriptionProps","$lJcFS$useDescription","$lJcFS$useUpdateEffect","$lJcFS$announce","$lJcFS$mergeProps","filter","Boolean","$f329116d8ad0aba0$export$9514819a8c81e960","ref2","allowsSorting","gridCellProps","$lJcFS$useGridCell","isSelectionCellDisabled","isSelectionCell","selectionManager","selectionMode","pressProps","$lJcFS$usePress","isDisabled","onPress","sort","focusableProps","$lJcFS$useFocusable","ariaSort","isSortedColumn","$lJcFS$isAndroid","columnHeaderProps","role","colspan","$b2db214c022798eb$export$7f2f6ae19e707aa5","rowProps","isPressed","$lJcFS$useGridRow","$f917ee10f4c32dab$export$1b95a7d2d517b841","$7713593715703b24$export$49571c903d73624c","$2a795c53a101c542$export$16ea7f650bd7c1bb","checkboxProps","$lJcFS$useGridSelectionCheckbox","$2a795c53a101c542$export$1003db6a7e384b99","isEmpty","isSelectAll","isSelected","isIndeterminate","onChange","toggleSelectAll","$0047e6c294ea075f$export$6fb1613bd7b28198","$lJcFS$useGridRowGroup"],"sources":["C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\utils.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ar-AE.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\bg-BG.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\cs-CZ.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\da-DK.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\de-DE.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\el-GR.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\en-US.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\es-ES.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\et-EE.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\fi-FI.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\fr-FR.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\he-IL.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\hr-HR.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\hu-HU.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\it-IT.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ja-JP.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ko-KR.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\lt-LT.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\lv-LV.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\nb-NO.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\nl-NL.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\pl-PL.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\pt-BR.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\pt-PT.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ro-RO.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ru-RU.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\sk-SK.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\sl-SI.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\sr-SP.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\sv-SE.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\tr-TR.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\uk-UA.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\zh-CN.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\zh-TW.json","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\*.js","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\TableKeyboardDelegate.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTable.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableColumnHeader.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableRow.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableHeaderRow.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableCell.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableSelectionCheckbox.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\index.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\nimport {TableState} from '@react-stately/table';\n\nexport const gridIds = new WeakMap<TableState<unknown>, string>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getColumnHeaderId<T>(state: TableState<T>, columnKey: Key): string {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(columnKey)}`;\n}\n\nexport function getCellId<T>(state: TableState<T>, rowKey: Key, columnKey: Key) {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(rowKey)}-${normalizeKey(columnKey)}`;\n}\n\nexport function getRowLabelledBy<T>(state: TableState<T>, rowKey: Key): string {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey =>\n    getCellId(state, rowKey, columnKey)\n  ).join(' ');\n}\n","{\n  \"ascending\": \"تصاعدي\",\n  \"ascendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تصاعدي\",\n  \"descending\": \"تنازلي\",\n  \"descendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تنازلي\",\n  \"select\": \"تحديد\",\n  \"selectAll\": \"تحديد الكل\",\n  \"sortable\": \"عمود قابل للترتيب\"\n}\n","{\n  \"ascending\": \"възходящ\",\n  \"ascendingSort\": \"сортирано по колона {columnName} във възходящ ред\",\n  \"descending\": \"низходящ\",\n  \"descendingSort\": \"сортирано по колона {columnName} в низходящ ред\",\n  \"select\": \"Изберете\",\n  \"selectAll\": \"Изберете всичко\",\n  \"sortable\": \"сортираща колона\"\n}\n","{\n  \"ascending\": \"vzestupně\",\n  \"ascendingSort\": \"řazeno vzestupně podle sloupce {columnName}\",\n  \"descending\": \"sestupně\",\n  \"descendingSort\": \"řazeno sestupně podle sloupce {columnName}\",\n  \"select\": \"Vybrat\",\n  \"selectAll\": \"Vybrat vše\",\n  \"sortable\": \"sloupec s možností řazení\"\n}\n","{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sorteret efter kolonne {columnName} i stigende rækkefølge\",\n  \"descending\": \"faldende\",\n  \"descendingSort\": \"sorteret efter kolonne {columnName} i faldende rækkefølge\",\n  \"select\": \"Vælg\",\n  \"selectAll\": \"Vælg alle\",\n  \"sortable\": \"sorterbar kolonne\"\n}\n","{\n  \"ascending\": \"aufsteigend\",\n  \"ascendingSort\": \"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\",\n  \"descending\": \"absteigend\",\n  \"descendingSort\": \"sortiert nach Spalte {columnName} in absteigender Reihenfolge\",\n  \"select\": \"Auswählen\",\n  \"selectAll\": \"Alles auswählen\",\n  \"sortable\": \"sortierbare Spalte\"\n}\n","{\n  \"ascending\": \"αύξουσα\",\n  \"ascendingSort\": \"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\",\n  \"descending\": \"φθίνουσα\",\n  \"descendingSort\": \"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\",\n  \"select\": \"Επιλογή\",\n  \"selectAll\": \"Επιλογή όλων\",\n  \"sortable\": \"Στήλη διαλογής\"\n}\n","{\n  \"select\": \"Select\",\n  \"selectAll\": \"Select All\",\n  \"sortable\": \"sortable column\",\n  \"ascending\": \"ascending\",\n  \"descending\": \"descending\",\n  \"ascendingSort\": \"sorted by column {columnName} in ascending order\",\n  \"descendingSort\": \"sorted by column {columnName} in descending order\"\n}\n","{\n  \"ascending\": \"de subida\",\n  \"ascendingSort\": \"ordenado por columna {columnName} en orden de subida\",\n  \"descending\": \"de bajada\",\n  \"descendingSort\": \"ordenado por columna {columnName} en orden de bajada\",\n  \"select\": \"Seleccionar\",\n  \"selectAll\": \"Seleccionar todos\",\n  \"sortable\": \"columna ordenable\"\n}\n","{\n  \"ascending\": \"tõusev järjestus\",\n  \"ascendingSort\": \"sorditud veeru järgi {columnName} tõusvas järjestuses\",\n  \"descending\": \"laskuv järjestus\",\n  \"descendingSort\": \"sorditud veeru järgi {columnName} laskuvas järjestuses\",\n  \"select\": \"Vali\",\n  \"selectAll\": \"Vali kõik\",\n  \"sortable\": \"sorditav veerg\"\n}\n","{\n  \"ascending\": \"nouseva\",\n  \"ascendingSort\": \"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\",\n  \"descending\": \"laskeva\",\n  \"descendingSort\": \"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\",\n  \"select\": \"Valitse\",\n  \"selectAll\": \"Valitse kaikki\",\n  \"sortable\": \"lajiteltava sarake\"\n}\n","{\n  \"ascending\": \"croissant\",\n  \"ascendingSort\": \"trié en fonction de la colonne {columnName} par ordre croissant\",\n  \"descending\": \"décroissant\",\n  \"descendingSort\": \"trié en fonction de la colonne {columnName} par ordre décroissant\",\n  \"select\": \"Sélectionner\",\n  \"selectAll\": \"Sélectionner tout\",\n  \"sortable\": \"colonne triable\"\n}\n","{\n  \"ascending\": \"עולה\",\n  \"ascendingSort\": \"מוין לפי עמודה {columnName} בסדר עולה\",\n  \"descending\": \"יורד\",\n  \"descendingSort\": \"מוין לפי עמודה {columnName} בסדר יורד\",\n  \"select\": \"בחר\",\n  \"selectAll\": \"בחר הכול\",\n  \"sortable\": \"עמודה שניתן למיין\"\n}\n","{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"razvrstano po stupcima {columnName} rastućem redoslijedom\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"razvrstano po stupcima {columnName} padajućim redoslijedom\",\n  \"select\": \"Odaberite\",\n  \"selectAll\": \"Odaberite sve\",\n  \"sortable\": \"stupac koji se može razvrstati\"\n}\n","{\n  \"ascending\": \"növekvő\",\n  \"ascendingSort\": \"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\",\n  \"descending\": \"csökkenő\",\n  \"descendingSort\": \"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\",\n  \"select\": \"Kijelölés\",\n  \"selectAll\": \"Összes kijelölése\",\n  \"sortable\": \"rendezendő oszlop\"\n}\n","{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"in ordine crescente in base alla colonna {columnName}\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"in ordine decrescente in base alla colonna {columnName}\",\n  \"select\": \"Seleziona\",\n  \"selectAll\": \"Seleziona tutto\",\n  \"sortable\": \"colonna ordinabile\"\n}\n","{\n  \"ascending\": \"昇順\",\n  \"ascendingSort\": \"列 {columnName} を昇順で並べ替え\",\n  \"descending\": \"降順\",\n  \"descendingSort\": \"列 {columnName} を降順で並べ替え\",\n  \"select\": \"選択\",\n  \"selectAll\": \"すべて選択\",\n  \"sortable\": \"並べ替え可能な列\"\n}\n","{\n  \"ascending\": \"오름차순\",\n  \"ascendingSort\": \"{columnName} 열을 기준으로 오름차순으로 정렬됨\",\n  \"descending\": \"내림차순\",\n  \"descendingSort\": \"{columnName} 열을 기준으로 내림차순으로 정렬됨\",\n  \"select\": \"선택\",\n  \"selectAll\": \"모두 선택\",\n  \"sortable\": \"정렬 가능한 열\"\n}\n","{\n  \"ascending\": \"didėjančia tvarka\",\n  \"ascendingSort\": \"surikiuota pagal stulpelį {columnName} didėjančia tvarka\",\n  \"descending\": \"mažėjančia tvarka\",\n  \"descendingSort\": \"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\",\n  \"select\": \"Pasirinkti\",\n  \"selectAll\": \"Pasirinkti viską\",\n  \"sortable\": \"rikiuojamas stulpelis\"\n}\n","{\n  \"ascending\": \"augošā secībā\",\n  \"ascendingSort\": \"kārtots pēc kolonnas {columnName} augošā secībā\",\n  \"descending\": \"dilstošā secībā\",\n  \"descendingSort\": \"kārtots pēc kolonnas {columnName} dilstošā secībā\",\n  \"select\": \"Atlasīt\",\n  \"selectAll\": \"Atlasīt visu\",\n  \"sortable\": \"kārtojamā kolonna\"\n}\n","{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sortert etter kolonne {columnName} i stigende rekkefølge\",\n  \"descending\": \"synkende\",\n  \"descendingSort\": \"sortert etter kolonne {columnName} i synkende rekkefølge\",\n  \"select\": \"Velg\",\n  \"selectAll\": \"Velg alle\",\n  \"sortable\": \"kolonne som kan sorteres\"\n}\n","{\n  \"ascending\": \"oplopend\",\n  \"ascendingSort\": \"gesorteerd in oplopende volgorde in kolom {columnName}\",\n  \"descending\": \"aflopend\",\n  \"descendingSort\": \"gesorteerd in aflopende volgorde in kolom {columnName}\",\n  \"select\": \"Selecteren\",\n  \"selectAll\": \"Alles selecteren\",\n  \"sortable\": \"sorteerbare kolom\"\n}\n","{\n  \"ascending\": \"rosnąco\",\n  \"ascendingSort\": \"posortowano według kolumny {columnName} w porządku rosnącym\",\n  \"descending\": \"malejąco\",\n  \"descendingSort\": \"posortowano według kolumny {columnName} w porządku malejącym\",\n  \"select\": \"Zaznacz\",\n  \"selectAll\": \"Zaznacz wszystko\",\n  \"sortable\": \"kolumna z możliwością sortowania\"\n}\n","{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"classificado pela coluna {columnName} em ordem crescente\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"classificado pela coluna {columnName} em ordem decrescente\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"coluna classificável\"\n}\n","{\n  \"ascending\": \"ascendente\",\n  \"ascendingSort\": \"Ordenar por coluna {columnName} em ordem ascendente\",\n  \"descending\": \"descendente\",\n  \"descendingSort\": \"Ordenar por coluna {columnName} em ordem descendente\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"Coluna ordenável\"\n}\n","{\n  \"ascending\": \"crescătoare\",\n  \"ascendingSort\": \"sortate după coloana {columnName} în ordine crescătoare\",\n  \"descending\": \"descrescătoare\",\n  \"descendingSort\": \"sortate după coloana {columnName} în ordine descrescătoare\",\n  \"select\": \"Selectare\",\n  \"selectAll\": \"Selectare totală\",\n  \"sortable\": \"coloană sortabilă\"\n}\n","{\n  \"ascending\": \"возрастание\",\n  \"ascendingSort\": \"сортировать столбец {columnName} в порядке возрастания\",\n  \"descending\": \"убывание\",\n  \"descendingSort\": \"сортировать столбец {columnName} в порядке убывания\",\n  \"select\": \"Выбрать\",\n  \"selectAll\": \"Выбрать все\",\n  \"sortable\": \"сортируемый столбец\"\n}\n","{\n  \"ascending\": \"vzostupne\",\n  \"ascendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"descending\": \"zostupne\",\n  \"descendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"select\": \"Vybrať\",\n  \"selectAll\": \"Vybrať všetko\",\n  \"sortable\": \"zoraditeľný stĺpec\"\n}\n","{\n  \"ascending\": \"naraščajoče\",\n  \"ascendingSort\": \"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\",\n  \"descending\": \"padajoče\",\n  \"descendingSort\": \"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\",\n  \"select\": \"Izberite\",\n  \"selectAll\": \"Izberite vse\",\n  \"sortable\": \"razvrstljivi stolpec\"\n}\n","{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"sortirano po kolonama {columnName} rastućim redosledom\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"sortirano po kolonama {columnName} padajućim redosledom\",\n  \"select\": \"Izaberite\",\n  \"selectAll\": \"Izaberite sve\",\n  \"sortable\": \"kolona koja se može sortirati\"\n}\n","{\n  \"ascending\": \"stigande\",\n  \"ascendingSort\": \"sorterat på kolumn {columnName} i stigande ordning\",\n  \"descending\": \"fallande\",\n  \"descendingSort\": \"sorterat på kolumn {columnName} i fallande ordning\",\n  \"select\": \"Markera\",\n  \"selectAll\": \"Markera allt\",\n  \"sortable\": \"sorterbar kolumn\"\n}\n","{\n  \"ascending\": \"artan sırada\",\n  \"ascendingSort\": \"{columnName} sütuna göre artan düzende sırala\",\n  \"descending\": \"azalan sırada\",\n  \"descendingSort\": \"{columnName} sütuna göre azalan düzende sırala\",\n  \"select\": \"Seç\",\n  \"selectAll\": \"Tümünü Seç\",\n  \"sortable\": \"Sıralanabilir sütun\"\n}\n","{\n  \"ascending\": \"висхідний\",\n  \"ascendingSort\": \"відсортовано за стовпцем {columnName} у висхідному порядку\",\n  \"descending\": \"низхідний\",\n  \"descendingSort\": \"відсортовано за стовпцем {columnName} у низхідному порядку\",\n  \"select\": \"Вибрати\",\n  \"selectAll\": \"Вибрати все\",\n  \"sortable\": \"сортувальний стовпець\"\n}\n","{\n  \"ascending\": \"升序\",\n  \"ascendingSort\": \"按列 {columnName} 升序排序\",\n  \"descending\": \"降序\",\n  \"descendingSort\": \"按列 {columnName} 降序排序\",\n  \"select\": \"选择\",\n  \"selectAll\": \"全选\",\n  \"sortable\": \"可排序的列\"\n}\n","{\n  \"ascending\": \"遞增\",\n  \"ascendingSort\": \"已依據「{columnName}」欄遞增排序\",\n  \"descending\": \"遞減\",\n  \"descendingSort\": \"已依據「{columnName}」欄遞減排序\",\n  \"select\": \"選取\",\n  \"selectAll\": \"全選\",\n  \"sortable\": \"可排序的欄\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridKeyboardDelegate} from '@react-aria/grid';\nimport {Key} from 'react';\nimport {Node} from '@react-types/shared';\nimport {TableCollection} from '@react-types/table';\n\nexport class TableKeyboardDelegate<T> extends GridKeyboardDelegate<T, TableCollection<T>> {\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) {\n        return child.key;\n      }\n\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) {\n        return;\n      }\n\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') {\n        return parent.key;\n      }\n\n      return;\n    }\n\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') {\n      return superKey;\n    }\n\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) {\n      return this.collection.columns[startItem.index].key;\n    }\n\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n\n  private findNextColumnKey(column: Node<T>) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item of row.childNodes) {\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  private findPreviousColumnKey(column: Node<T>) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the next column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findPreviousColumnKey(item)\n        : this.findNextColumnKey(item);\n    }\n\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the previous column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findNextColumnKey(item)\n        : this.findPreviousColumnKey(item);\n    }\n\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n    if (key == null) {\n      return null;\n    }\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // Check each of the row header cells in this row for a match\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell'\n              ? cell.key\n              : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {GridAria, GridProps, useGrid} from '@react-aria/grid';\nimport {gridIds} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Layout} from '@react-stately/virtualizer';\nimport {mergeProps, useDescription, useId, useUpdateEffect} from '@react-aria/utils';\nimport {Node} from '@react-types/shared';\nimport {RefObject, useMemo} from 'react';\nimport {TableKeyboardDelegate} from './TableKeyboardDelegate';\nimport {TableState} from '@react-stately/table';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\ninterface TableProps<T> extends GridProps {\n  /** The layout object for the table. Computes what content is visible and how to position and style them. */\n  layout?: Layout<Node<T>>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a table component.\n * A table displays data in rows and columns and enables a user to navigate its contents via directional navigation keys,\n * and optionally supports row selection and sorting.\n * @param props - Props for the table.\n * @param state - State for the table, as returned by `useTableState`.\n * @param ref - The ref attached to the table element.\n */\nexport function useTable<T>(props: TableProps<T>, state: TableState<T>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    keyboardDelegate,\n    isVirtualized,\n    layout\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new TableKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, layout]);\n\n  let id = useId();\n  gridIds.set(state, id);\n\n  let {gridProps} = useGrid({\n    ...props,\n    id,\n    keyboardDelegate: delegate,\n    getRowText(key): string {\n      let added = state.collection.getItem(key);\n      if (!added) {\n        return '';\n      }\n\n      // If the row has a textValue, use that.\n      if (added.textValue != null) {\n        return added.textValue;\n      }\n\n      // Otherwise combine the text of each of the row header columns.\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n      if (rowHeaderColumnKeys) {\n        let text = [];\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n            text.push(cell.textValue);\n          }\n\n          if (text.length === rowHeaderColumnKeys.size) {\n            break;\n          }\n        }\n\n        return text.join(' ');\n      }\n\n      return '';\n    }\n  }, state, ref);\n\n  // Override to include header rows\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  }\n\n  let {column, direction: sortDirection} = state.sortDescriptor || {};\n  let formatMessage = useMessageFormatter(intlMessages);\n  let sortDescription = useMemo(() => {\n    let columnName = state.collection.columns.find(c => c.key === column)?.textValue;\n    return sortDirection && column ? formatMessage(`${sortDirection}Sort`, {columnName}) : undefined;\n  }, [sortDirection, column, state.collection.columns]);\n\n  let descriptionProps = useDescription(sortDescription);\n\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  useUpdateEffect(() => {\n    announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n\n  return {\n    gridProps: mergeProps(\n      gridProps,\n      descriptionProps,\n      {\n        // merge sort description with long press information\n        'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n      }\n    )\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\nimport {HTMLAttributes, RefObject} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {isAndroid, mergeProps, useDescription} from '@react-aria/utils';\nimport {TableState} from '@react-stately/table';\nimport {useFocusable} from '@react-aria/focus';\nimport {useGridCell} from '@react-aria/grid';\nimport {useMessageFormatter} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\n\ninterface ColumnHeaderProps {\n  /** An object representing the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader). Contains all the relevant information that makes up the column header. */\n  node: GridNode<unknown>,\n  /** Whether the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) is contained in a virtual scroller. */\n  isVirtualized?: boolean\n}\n\ninterface ColumnHeaderAria {\n  /** Props for the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) element. */\n  columnHeaderProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a column header in a table.\n * @param props - Props for the column header.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the column header element.\n */\nexport function useTableColumnHeader<T>(props: ColumnHeaderProps, state: TableState<T>, ref: RefObject<HTMLElement>): ColumnHeaderAria {\n  let {node} = props;\n  // let allowsResizing = node.props.allowsResizing;\n  let allowsSorting = node.props.allowsSorting;\n  let {gridCellProps} = useGridCell(props, state, ref);\n\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n  let {pressProps} = usePress({\n    // Disabled for allowsResizing because if resizing is allowed, a menu trigger is added to the column header.\n    isDisabled: !allowsSorting || isSelectionCellDisabled, // || allowsResizing,\n    onPress() {\n      state.sort(node.key);\n    }\n  });\n\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {focusableProps} = useFocusable({}, ref);\n\n  let ariaSort: HTMLAttributes<HTMLElement>['aria-sort'] = null;\n  let isSortedColumn = state.sortDescriptor?.column === node.key;\n  let sortDirection = state.sortDescriptor?.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !isAndroid()) {\n    ariaSort = isSortedColumn ? sortDirection : 'none';\n  }\n\n  let formatMessage = useMessageFormatter(intlMessages);\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${formatMessage('sortable')}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && isAndroid()) {\n      sortDescription = `${sortDescription}, ${formatMessage(sortDirection)}`;\n    }\n  }\n\n  let descriptionProps = useDescription(sortDescription);\n\n  return {\n    columnHeaderProps: {\n      ...mergeProps(gridCellProps, pressProps, focusableProps, descriptionProps),\n      role: 'columnheader',\n      id: getColumnHeaderId(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getRowLabelledBy} from './utils';\nimport {GridRowAria, GridRowProps, useGridRow} from '@react-aria/grid';\nimport {RefObject} from 'react';\nimport {TableCollection} from '@react-types/table';\nimport {TableState} from '@react-stately/table';\n\n/**\n * Provides the behavior and accessibility implementation for a row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<HTMLElement>): GridRowAria {\n  let {node} = props;\n  let {rowProps, isPressed} = useGridRow<T, TableCollection<T>, TableState<T>>(props, state, ref);\n  return {\n    rowProps: {\n      ...rowProps,\n      'aria-labelledby': getRowLabelledBy(state, node.key)\n    },\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridRowProps} from '@react-aria/grid';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\n\nexport interface TableHeaderRowAria {\n  /** Props for the grid row element. */\n  rowProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a header row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useTableHeaderRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<HTMLElement>): TableHeaderRowAria {\n  let {node, isVirtualized} = props;\n  let rowProps = {\n    role: 'row'\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getCellId} from './utils';\nimport {GridNode} from '@react-types/grid';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridCell} from '@react-aria/grid';\n\ninterface TableCellProps {\n  /** An object representing the table cell. Contains all the relevant information that makes up the row header. */\n  node: GridNode<unknown>,\n  /** Whether the cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\ninterface TableCellAria {\n  /** Props for the table cell element. */\n  gridCellProps: HTMLAttributes<HTMLElement>,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a table.\n * @param props - Props for the cell.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the cell element.\n */\nexport function useTableCell<T>(props: TableCellProps, state: TableState<T>, ref: RefObject<HTMLElement>): TableCellAria {\n  let {gridCellProps, isPressed} = useGridCell(props, state, ref);\n\n  let columnKey = props.node.column.key;\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = getCellId(state, props.node.parentKey, columnKey);\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {getRowLabelledBy} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridSelectionCheckbox} from '@react-aria/grid';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\ninterface SelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\ninterface SelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\ninterface SelectAllCheckboxAria {\n  /** Props for the select all checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a table.\n * @param props - Props for the selection checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectionCheckbox<T>(props: SelectionCheckboxProps, state: TableState<T>): SelectionCheckboxAria {\n  let {key} = props;\n  const {checkboxProps} = useGridSelectionCheckbox(props, state);\n\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${getRowLabelledBy(state, key)}`\n    }\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for the select all checkbox in a table.\n * @param props - Props for the select all checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectAllCheckbox<T>(state: TableState<T>): SelectAllCheckboxAria {\n  let {isEmpty, isSelectAll, selectionMode} = state.selectionManager;\n  const formatMessage = useMessageFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      'aria-label': formatMessage(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple',\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useTable';\nexport * from './useTableColumnHeader';\nexport * from './useTableRow';\nexport * from './useTableHeaderRow';\nexport * from './useTableCell';\nexport * from './useTableSelectionCheckbox';\n// export * from './useTableColumnResize';\n\n// Workaround for a Parcel bug where re-exports don't work in the CommonJS output format...\n// export {useGridRowGroup as useTableRowGroup} from '@react-aria/grid';\nimport {GridRowGroupAria, useGridRowGroup} from '@react-aria/grid';\nexport function useTableRowGroup(): GridRowGroupAria {\n  return useGridRowGroup();\n}\n"]},"metadata":{},"sourceType":"module"}