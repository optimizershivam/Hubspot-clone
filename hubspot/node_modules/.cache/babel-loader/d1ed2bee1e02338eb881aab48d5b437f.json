{"ast":null,"code":"import { __extends } from \"tslib\";\nexport var ErrorCode;\n\n(function (ErrorCode) {\n  // When we have a placeholder but no value to format\n  ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\"; // When value supplied is invalid\n\n  ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\"; // When we need specific Intl API but it's not available\n\n  ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\n\nvar FormatError =\n/** @class */\nfunction (_super) {\n  __extends(FormatError, _super);\n\n  function FormatError(msg, code, originalMessage) {\n    var _this = _super.call(this, msg) || this;\n\n    _this.code = code;\n    _this.originalMessage = originalMessage;\n    return _this;\n  }\n\n  FormatError.prototype.toString = function () {\n    return \"[formatjs Error: \".concat(this.code, \"] \").concat(this.message);\n  };\n\n  return FormatError;\n}(Error);\n\nexport { FormatError };\n\nvar InvalidValueError =\n/** @class */\nfunction (_super) {\n  __extends(InvalidValueError, _super);\n\n  function InvalidValueError(variableId, value, options, originalMessage) {\n    return _super.call(this, \"Invalid values for \\\"\".concat(variableId, \"\\\": \\\"\").concat(value, \"\\\". Options are \\\"\").concat(Object.keys(options).join('\", \"'), \"\\\"\"), ErrorCode.INVALID_VALUE, originalMessage) || this;\n  }\n\n  return InvalidValueError;\n}(FormatError);\n\nexport { InvalidValueError };\n\nvar InvalidValueTypeError =\n/** @class */\nfunction (_super) {\n  __extends(InvalidValueTypeError, _super);\n\n  function InvalidValueTypeError(value, type, originalMessage) {\n    return _super.call(this, \"Value for \\\"\".concat(value, \"\\\" must be of type \").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;\n  }\n\n  return InvalidValueTypeError;\n}(FormatError);\n\nexport { InvalidValueTypeError };\n\nvar MissingValueError =\n/** @class */\nfunction (_super) {\n  __extends(MissingValueError, _super);\n\n  function MissingValueError(variableId, originalMessage) {\n    return _super.call(this, \"The intl string context variable \\\"\".concat(variableId, \"\\\" was not provided to the string \\\"\").concat(originalMessage, \"\\\"\"), ErrorCode.MISSING_VALUE, originalMessage) || this;\n  }\n\n  return MissingValueError;\n}(FormatError);\n\nexport { MissingValueError };","map":{"version":3,"names":["__extends","ErrorCode","FormatError","_super","msg","code","originalMessage","_this","call","prototype","toString","concat","message","Error","InvalidValueError","variableId","value","options","Object","keys","join","INVALID_VALUE","InvalidValueTypeError","type","MissingValueError","MISSING_VALUE"],"sources":["C:/Users/Tejaswini Mahale/Desktop/Hubspot/hubspot/node_modules/intl-messageformat/lib/src/error.js"],"sourcesContent":["import { __extends } from \"tslib\";\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \".concat(this.code, \"] \").concat(this.message);\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\".concat(variableId, \"\\\": \\\"\").concat(value, \"\\\". Options are \\\"\").concat(Object.keys(options).join('\", \"'), \"\\\"\"), ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\".concat(value, \"\\\" must be of type \").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\".concat(variableId, \"\\\" was not provided to the string \\\"\").concat(originalMessage, \"\\\"\"), ErrorCode.MISSING_VALUE, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}