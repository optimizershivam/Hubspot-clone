{"ast":null,"code":"import $tyW6A$react, { useMemo as $tyW6A$useMemo, useRef as $tyW6A$useRef } from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $c1d7fb2ec91bae71$exports = {};\n$parcel$export($c1d7fb2ec91bae71$exports, \"Item\", () => $c1d7fb2ec91bae71$export$6d08773d2e66f8f2);\n\nfunction $c1d7fb2ec91bae71$var$Item(props) {\n  return null;\n}\n\n$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {\n  let {\n    childItems: childItems,\n    title: title,\n    children: children\n  } = props;\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || ''; // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n\n  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning)) console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  yield {\n    type: 'item',\n    props: props,\n    rendered: rendered,\n    textValue: textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),\n\n    *childNodes() {\n      if (childItems) for (let child1 of childItems) yield {\n        type: 'item',\n        value: child1\n      };else if (title) {\n        let items = [];\n        $tyW6A$react.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n\n  };\n};\n\nfunction $c1d7fb2ec91bae71$var$hasChildItems(props) {\n  if (props.hasChildItems != null) return props.hasChildItems;\n  if (props.childItems) return true;\n  if (props.title && $tyW6A$react.Children.count(props.children) > 0) return true;\n  return false;\n} // We don't want getCollectionNode to show up in the type definition\n\n\nlet $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;\nvar $9fc4852771d079eb$exports = {};\n$parcel$export($9fc4852771d079eb$exports, \"Section\", () => $9fc4852771d079eb$export$6e2c8f0811a474ce);\n\nfunction $9fc4852771d079eb$var$Section(props) {\n  return null;\n}\n\n$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode(props) {\n  let {\n    children: children,\n    title: title,\n    items: items1\n  } = props;\n  yield {\n    type: 'section',\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items1) throw new Error('props.children was a function but props.items is missing');\n\n        for (let item of items1) yield {\n          type: 'item',\n          value: item,\n          renderer: children\n        };\n      } else {\n        let items = [];\n        $tyW6A$react.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n\n  };\n}; // We don't want getCollectionNode to show up in the type definition\n\n\nlet $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;\nvar $abe69ec9966cc167$exports = {};\nvar $7613b1592d41b092$exports = {};\n$parcel$export($7613b1592d41b092$exports, \"useCollection\", () => $7613b1592d41b092$export$6cd28814d92fa9c9);\n\nclass $eb2240fc39a57fa5$export$bf788dd355e3a401 {\n  build(props, context) {\n    this.context = context;\n    return $eb2240fc39a57fa5$var$iterable(() => this.iterateCollection(props));\n  }\n\n  *iterateCollection(props) {\n    let {\n      children: children,\n      items: items\n    } = props;\n\n    if (typeof children === 'function') {\n      if (!items) throw new Error('props.children was a function but props.items is missing');\n\n      for (let item of props.items) yield* this.getFullNode({\n        value: item\n      }, {\n        renderer: children\n      });\n    } else {\n      let items = [];\n      $tyW6A$react.Children.forEach(children, child => {\n        items.push(child);\n      });\n      let index = 0;\n\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  getKey(item, partialNode, state, parentKey) {\n    if (item.key != null) return item.key;\n    if (partialNode.type === 'cell' && partialNode.key != null) return `${parentKey}${partialNode.key}`;\n    let v = partialNode.value;\n\n    if (v != null) {\n      var _key;\n\n      let key = (_key = v.key) !== null && _key !== void 0 ? _key : v.id;\n      if (key == null) throw new Error('No key found for item');\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  getChildState(state, partialNode) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  *getFullNode(partialNode, state, parentKey, parentNode) {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    } // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n\n\n    if ($tyW6A$react.isValidElement(element)) {\n      let type = element.type;\n\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = typeof element.type === 'function' ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context);\n      let index = partialNode.index;\n      let result = childNodes.next();\n\n      while (!result.done && result.value) {\n        let childNode = result.value;\n        partialNode.index = index;\n        let nodeKey = childNode.key;\n        if (!nodeKey) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);\n        let nodes = this.getFullNode({ ...childNode,\n          key: nodeKey,\n          index: index,\n          wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n        let children = [...nodes];\n\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) this.cache.set(node.value, node); // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n\n          if (partialNode.type && node.type !== partialNode.type) throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    } // Ignore invalid elements\n\n\n    if (partialNode.key == null) return; // Create full node\n\n    let builder = this;\n    let node = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: $eb2240fc39a57fa5$var$iterable(function* () {\n        if (!partialNode.hasChildNodes) return;\n        let index = 0;\n\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n\n          for (let node1 of nodes) {\n            index++;\n            yield node1;\n          }\n        }\n      })\n    };\n    yield node;\n  }\n\n  constructor() {\n    this.cache = new WeakMap();\n  }\n\n} // Wraps an iterator function as an iterable object, and caches the results.\n\n\nfunction $eb2240fc39a57fa5$var$iterable(iterator) {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) yield item;\n\n      if (!iterable) iterable = iterator();\n\n      for (let item1 of iterable) {\n        cache.push(item1);\n        yield item1;\n      }\n    }\n\n  };\n}\n\nfunction $eb2240fc39a57fa5$var$compose(outer, inner) {\n  if (outer && inner) return element => outer(inner(element));\n  if (outer) return outer;\n  if (inner) return inner;\n}\n\nfunction $eb2240fc39a57fa5$var$capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {\n  let invalidators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let builder = $tyW6A$useMemo(() => new $eb2240fc39a57fa5$export$bf788dd355e3a401(), []);\n  let prev = $tyW6A$useRef(null);\n  return $tyW6A$useMemo(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current; // Don't invalidate when any prop changes, just the two we care about.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\n\nvar $453cc9f0df89c0a5$exports = {};\n$parcel$export($453cc9f0df89c0a5$exports, \"getItemCount\", () => $453cc9f0df89c0a5$export$77d5aafae4e095b2);\nconst $453cc9f0df89c0a5$var$cache = new WeakMap();\n\nfunction $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {\n  let count = $453cc9f0df89c0a5$var$cache.get(collection);\n  if (count != null) return count;\n  count = 0;\n\n  for (let item of collection) if (item.type === 'section') count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);else count++;\n\n  $453cc9f0df89c0a5$var$cache.set(collection, count);\n  return count;\n}\n\nexport { $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 as Item, $9fc4852771d079eb$export$6e2c8f0811a474ce as Section, $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection, $453cc9f0df89c0a5$export$77d5aafae4e095b2 as getItemCount };","map":{"version":3,"mappings":"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","names":["$c1d7fb2ec91bae71$var$Item","props","getCollectionNode","context","childItems","title","children","rendered","textValue","suppressTextValueWarning","console","warn","type","hasChildNodes","$c1d7fb2ec91bae71$var$hasChildItems","childNodes","child1","value","items","$tyW6A$react","Children","forEach","child","push","element","hasChildItems","count","$c1d7fb2ec91bae71$export$6d08773d2e66f8f2","$9fc4852771d079eb$var$Section","items1","Error","item","renderer","$9fc4852771d079eb$export$6e2c8f0811a474ce","$eb2240fc39a57fa5$export$bf788dd355e3a401","build","$eb2240fc39a57fa5$var$iterable","iterateCollection","getFullNode","index","nodes","node","getKey","partialNode","state","parentKey","key","v","_key","id","getChildState","parentNode","cached","cache","get","shouldInvalidate","isValidElement","name","result","next","done","childNode","nodeKey","wrapper","$eb2240fc39a57fa5$var$compose","set","$eb2240fc39a57fa5$var$capitalize","builder","level","node1","WeakMap","iterator","iterable","Symbol","item1","outer","inner","str","toUpperCase","slice","$7613b1592d41b092$export$6cd28814d92fa9c9","factory","invalidators","$tyW6A$useMemo","prev","$tyW6A$useRef","current","$453cc9f0df89c0a5$var$cache","$453cc9f0df89c0a5$export$77d5aafae4e095b2","collection"],"sources":["C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\Item.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\Section.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\CollectionBuilder.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\useCollection.ts","C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\getItemCount.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>, context: any): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !context?.suppressTextValueWarning) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from './types';\nimport React, {ReactElement} from 'react';\nimport {SectionProps} from '@react-types/shared';\n\nfunction Section<T>(props: SectionProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nSection.getCollectionNode = function* getCollectionNode<T>(props: SectionProps<T>): Generator<PartialNode<T>> {\n  let {children, title, items} = props;\n  yield {\n    type: 'section',\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n    \n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Section = Section as <T>(props: SectionProps<T>) => JSX.Element;\nexport {_Section as Section};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CollectionBase, CollectionElement, Node} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {Key, ReactElement} from 'react';\n\ninterface CollectionBuilderState {\n  renderer?: (value: any) => ReactElement\n}\n\nexport class CollectionBuilder<T extends object> {\n  private context?: unknown;\n  private cache: WeakMap<T, Node<T>> = new WeakMap();\n\n  build(props: CollectionBase<T>, context?: unknown) {\n    this.context = context;\n    return iterable(() => this.iterateCollection(props));\n  }\n\n  private *iterateCollection(props: CollectionBase<T>) {\n    let {children, items} = props;\n\n    if (typeof children === 'function') {\n      if (!items) {\n        throw new Error('props.children was a function but props.items is missing');\n      }\n\n      for (let item of props.items) {\n        yield* this.getFullNode({\n          value: item\n        }, {renderer: children});\n      }\n    } else {\n      let items: CollectionElement<T>[] = [];\n      React.Children.forEach(children, child => {\n        items.push(child);\n      });\n\n      let index = 0;\n      for (let item of items) {\n        let nodes = this.getFullNode({\n          element: item,\n          index: index\n        }, {});\n\n        for (let node of nodes) {\n          index++;\n          yield node;\n        }\n      }\n    }\n  }\n\n  private getKey(item: CollectionElement<T>, partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key): Key {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (partialNode.type === 'cell' && partialNode.key != null) {\n      return `${parentKey}${partialNode.key}`;\n    }\n\n    let v = partialNode.value as any;\n    if (v != null) {\n      let key = v.key ?? v.id;\n      if (key == null) {\n        throw new Error('No key found for item');\n      }\n\n      return key;\n    }\n\n    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n  }\n\n  private getChildState(state: CollectionBuilderState, partialNode: PartialNode<T>) {\n    return {\n      renderer: partialNode.renderer || state.renderer\n    };\n  }\n\n  private *getFullNode(partialNode: PartialNode<T>, state: CollectionBuilderState, parentKey?: Key, parentNode?: Node<T>): Generator<Node<T>> {\n    // If there's a value instead of an element on the node, and a parent renderer function is available,\n    // use it to render an element for the value.\n    let element = partialNode.element;\n    if (!element && partialNode.value && state && state.renderer) {\n      let cached = this.cache.get(partialNode.value);\n      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n        cached.index = partialNode.index;\n        cached.parentKey = parentNode ? parentNode.key : null;\n        yield cached;\n        return;\n      }\n\n      element = state.renderer(partialNode.value);\n    }\n\n    // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n    // Call this function to get a partial node, and recursively build a full node from there.\n    if (React.isValidElement(element)) {\n      let type = element.type as any;\n      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n        let name = typeof element.type === 'function' ? element.type.name : element.type;\n        throw new Error(`Unknown element <${name}> in collection.`);\n      }\n\n      let childNodes = type.getCollectionNode(element.props, this.context) as Generator<PartialNode<T>, void, Node<T>[]>;\n      let index = partialNode.index;\n      let result = childNodes.next();\n      while (!result.done && result.value) {\n        let childNode = result.value;\n\n        partialNode.index = index;\n\n        let nodeKey = childNode.key;\n        if (!nodeKey) {\n          nodeKey = childNode.element ? null : this.getKey(element as CollectionElement<T>, partialNode, state, parentKey);\n        }\n\n        let nodes = this.getFullNode({\n          ...childNode,\n          key: nodeKey,\n          index,\n          wrapper: compose(partialNode.wrapper, childNode.wrapper)\n        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n\n        let children = [...nodes];\n        for (let node of children) {\n          // Cache the node based on its value\n          node.value = childNode.value || partialNode.value;\n          if (node.value) {\n            this.cache.set(node.value, node);\n          }\n\n          // The partial node may have specified a type for the child in order to specify a constraint.\n          // Verify that the full node that was built recursively matches this type.\n          if (partialNode.type && node.type !== partialNode.type) {\n            throw new Error(`Unsupported type <${capitalize(node.type)}> in <${capitalize(parentNode.type)}>. Only <${capitalize(partialNode.type)}> is supported.`);\n          }\n\n          index++;\n          yield node;\n        }\n\n        result = childNodes.next(children);\n      }\n\n      return;\n    }\n\n    // Ignore invalid elements\n    if (partialNode.key == null) {\n      return;\n    }\n\n    // Create full node\n    let builder = this;\n    let node: Node<T> = {\n      type: partialNode.type,\n      props: partialNode.props,\n      key: partialNode.key,\n      parentKey: parentNode ? parentNode.key : null,\n      value: partialNode.value,\n      level: parentNode ? parentNode.level + 1 : 0,\n      index: partialNode.index,\n      rendered: partialNode.rendered,\n      textValue: partialNode.textValue,\n      'aria-label': partialNode['aria-label'],\n      wrapper: partialNode.wrapper,\n      shouldInvalidate: partialNode.shouldInvalidate,\n      hasChildNodes: partialNode.hasChildNodes,\n      childNodes: iterable(function *() {\n        if (!partialNode.hasChildNodes) {\n          return;\n        }\n\n        let index = 0;\n        for (let child of partialNode.childNodes()) {\n          // Ensure child keys are globally unique by prepending the parent node's key\n          if (child.key != null) {\n            // TODO: Remove this line entirely and enforce that users always provide unique keys.\n            // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n            // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n            // children having a key of `abc`.\n            child.key = `${node.key}${child.key}`;\n          }\n\n          child.index = index;\n          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n          for (let node of nodes) {\n            index++;\n            yield node;\n          }\n        }\n      })\n    };\n\n    yield node;\n  }\n}\n\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction iterable<T>(iterator: () => IterableIterator<Node<T>>): Iterable<Node<T>> {\n  let cache = [];\n  let iterable = null;\n  return {\n    *[Symbol.iterator]() {\n      for (let item of cache) {\n        yield item;\n      }\n\n      if (!iterable) {\n        iterable = iterator();\n      }\n\n      for (let item of iterable) {\n        cache.push(item);\n        yield item;\n      }\n    }\n  };\n}\n\ntype Wrapper = (element: ReactElement) => ReactElement;\nfunction compose(outer: Wrapper | void, inner: Wrapper | void): Wrapper {\n  if (outer && inner) {\n    return (element) => outer(inner(element));\n  }\n\n  if (outer) {\n    return outer;\n  }\n\n  if (inner) {\n    return inner;\n  }\n}\n\nfunction capitalize(str: string) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {useMemo, useRef} from 'react';\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>, prev: C | null) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionBase<T>, factory: CollectionFactory<T, C>, context?: unknown, invalidators: Array<any> = []): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n\n  let prev = useRef<C>(null);\n  return useMemo(() => {\n    let nodes = builder.build(props, context);\n    prev.current = factory(nodes, prev.current);\n    return prev.current;\n  // Don't invalidate when any prop changes, just the two we care about.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builder, props.children, props.items, context, ...invalidators]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Node} from '@react-types/shared';\n\nconst cache = new WeakMap<Iterable<unknown>, number>();\n\nexport function getItemCount<T>(collection: Iterable<Node<T>>): number {\n  let count = cache.get(collection);\n  if (count != null) {\n    return count;\n  }\n\n  count = 0;\n  for (let item of collection) {\n    if (item.type === 'section') {\n      count += getItemCount(item.childNodes);\n    } else {\n      count++;\n    }\n  }\n\n  cache.set(collection, count);\n  return count;\n}\n"]},"metadata":{},"sourceType":"module"}