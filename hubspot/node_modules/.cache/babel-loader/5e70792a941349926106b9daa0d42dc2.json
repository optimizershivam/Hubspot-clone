{"ast":null,"code":"import { useOverlayTriggerState as $9Xvoh$useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useState as $9Xvoh$useState } from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $a28c903ee9ad8dc5$exports = {};\n$parcel$export($a28c903ee9ad8dc5$exports, \"useMenuTriggerState\", () => $a28c903ee9ad8dc5$export$79fefeb1c2091ac3);\n\nfunction $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {\n  let overlayTriggerState = $9Xvoh$useOverlayTriggerState(props);\n  let [focusStrategy1, setFocusStrategy] = $9Xvoh$useState(null);\n  return {\n    focusStrategy: focusStrategy1,\n    ...overlayTriggerState,\n\n    open() {\n      let focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n\n    toggle() {\n      let focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n\n  };\n}\n\nexport { $a28c903ee9ad8dc5$export$79fefeb1c2091ac3 as useMenuTriggerState };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;SAgCgBA,0CAAoBC,OAA4C;EAC9E,IAAIC,mBAAmB,GAAGC,6BAAsB,CAACF,KAAD,CAAhD;EACA,IAAG,CAAEG,cAAF,EAAiBC,gBAAjB,IAAqCC,eAAQ,CAAgB,IAAhB,CAAhD;EAEA,OAAO;mBACLF,cADK;OAEFF,mBAFE;;IAGLK,IAAI,GAAsC;MAAA,IAArCC,aAAqC,uEAAN,IAAM;MACxCH,gBAAgB,CAACG,aAAD,CAAhB;MACAN,mBAAmB,CAACK,IAApB;IACD,CANI;;IAOLE,MAAM,GAAsC;MAAA,IAArCD,aAAqC,uEAAN,IAAM;MAC1CH,gBAAgB,CAACG,aAAD,CAAhB;MACAN,mBAAmB,CAACO,MAApB;IACD;;EAVI,CAAP;AAYD","names":["$a28c903ee9ad8dc5$export$79fefeb1c2091ac3","props","overlayTriggerState","$9Xvoh$useOverlayTriggerState","focusStrategy1","setFocusStrategy","$9Xvoh$useState","open","focusStrategy","toggle"],"sources":["C:\\Users\\Tejaswini Mahale\\Desktop\\Hubspot\\hubspot\\node_modules\\@react-stately\\menu\\dist\\packages\\@react-stately\\menu\\src\\useMenuTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): MenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}