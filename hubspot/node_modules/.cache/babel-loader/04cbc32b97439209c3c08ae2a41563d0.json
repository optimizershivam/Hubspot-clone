{"ast":null,"code":"import { complex } from 'style-value-types';\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\n\nvar isAnimatable = function (key, value) {\n  // If the list of keys tat might be non-animatable grows, replace with Set\n  if (key === \"zIndex\") return false; // If it's a number or a keyframes array, we can animate it. We might at some point\n  // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n  // but for now lets leave it like this for performance reasons\n\n  if (typeof value === \"number\" || Array.isArray(value)) return true;\n\n  if (typeof value === \"string\" && // It's animatable if we have a string\n  complex.test(value) && // And it contains numbers and/or colors\n  !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nexport { isAnimatable };","map":{"version":3,"names":["complex","isAnimatable","key","value","Array","isArray","test","startsWith"],"sources":["C:/Users/Tejaswini Mahale/Desktop/boorish-earthquake-4077/hubspot/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs"],"sourcesContent":["import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nvar isAnimatable = function (key, value) {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,mBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAG,UAAUC,GAAV,EAAeC,KAAf,EAAsB;EACrC;EACA,IAAID,GAAG,KAAK,QAAZ,EACI,OAAO,KAAP,CAHiC,CAIrC;EACA;EACA;;EACA,IAAI,OAAOC,KAAP,KAAiB,QAAjB,IAA6BC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAjC,EACI,OAAO,IAAP;;EACJ,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B;EAC7BH,OAAO,CAACM,IAAR,CAAaH,KAAb,CADA,IACuB;EACvB,CAACA,KAAK,CAACI,UAAN,CAAiB,MAAjB,CAFL,CAE8B;EAF9B,EAGE;IACE,OAAO,IAAP;EACH;;EACD,OAAO,KAAP;AACH,CAhBD;;AAkBA,SAASN,YAAT"},"metadata":{},"sourceType":"module"}