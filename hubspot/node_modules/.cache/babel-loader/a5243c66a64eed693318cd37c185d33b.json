{"ast":null,"code":"import { buildTransform, buildTransformOrigin } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { isTransformProp, isTransformOriginProp } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n  var _a;\n\n  var style = state.style,\n      vars = state.vars,\n      transform = state.transform,\n      transformKeys = state.transformKeys,\n      transformOrigin = state.transformOrigin; // Empty the transformKeys array. As we're throwing out refs to its items\n  // this might not be as cheap as suspected. Maybe using the array as a buffer\n  // with a manual incrementation would be better.\n\n  transformKeys.length = 0; // Track whether we encounter any transform or transformOrigin values.\n\n  var hasTransform = false;\n  var hasTransformOrigin = false; // Does the calculated transform essentially equal \"none\"?\n\n  var transformIsNone = true;\n  /**\n   * Loop over all our latest animated values and decide whether to handle them\n   * as a style or CSS variable.\n   *\n   * Transforms and transform origins are kept seperately for further processing.\n   */\n\n  for (var key in latestValues) {\n    var value = latestValues[key];\n    /**\n     * If this is a CSS variable we don't do any further processing.\n     */\n\n    if (isCSSVariable(key)) {\n      vars[key] = value;\n      continue;\n    } // Convert the value to its default value type, ie 0 -> \"0px\"\n\n\n    var valueType = numberValueTypes[key];\n    var valueAsType = getValueAsType(value, valueType);\n\n    if (isTransformProp(key)) {\n      // If this is a transform, flag to enable further transform processing\n      hasTransform = true;\n      transform[key] = valueAsType;\n      transformKeys.push(key); // If we already know we have a non-default transform, early return\n\n      if (!transformIsNone) continue; // Otherwise check to see if this is a default transform\n\n      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0)) transformIsNone = false;\n    } else if (isTransformOriginProp(key)) {\n      transformOrigin[key] = valueAsType; // If this is a transform origin, flag and enable further transform-origin processing\n\n      hasTransformOrigin = true;\n    } else {\n      style[key] = valueAsType;\n    }\n  }\n\n  if (hasTransform) {\n    style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n  } else if (transformTemplate) {\n    style.transform = transformTemplate({}, \"\");\n  } else if (!latestValues.transform && style.transform) {\n    style.transform = \"none\";\n  }\n\n  if (hasTransformOrigin) {\n    style.transformOrigin = buildTransformOrigin(transformOrigin);\n  }\n}\n\nexport { buildHTMLStyles };","map":{"version":3,"names":["buildTransform","buildTransformOrigin","isCSSVariable","isTransformProp","isTransformOriginProp","getValueAsType","numberValueTypes","buildHTMLStyles","state","latestValues","options","transformTemplate","_a","style","vars","transform","transformKeys","transformOrigin","length","hasTransform","hasTransformOrigin","transformIsNone","key","value","valueType","valueAsType","push","default"],"sources":["C:/Users/Tejaswini Mahale/Desktop/Hubspot/hubspot/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs"],"sourcesContent":["import { buildTransform, buildTransformOrigin } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { isTransformProp, isTransformOriginProp } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    var _a;\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    var transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (var key in latestValues) {\n        var value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        var valueType = numberValueTypes[key];\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (hasTransform) {\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n    }\n    else if (transformTemplate) {\n        style.transform = transformTemplate({}, \"\");\n    }\n    else if (!latestValues.transform && style.transform) {\n        style.transform = \"none\";\n    }\n    if (hasTransformOrigin) {\n        style.transformOrigin = buildTransformOrigin(transformOrigin);\n    }\n}\n\nexport { buildHTMLStyles };\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,uBAArD;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,iBAAvD;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,YAAhC,EAA8CC,OAA9C,EAAuDC,iBAAvD,EAA0E;EACtE,IAAIC,EAAJ;;EACA,IAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB;EAAA,IAAyBC,IAAI,GAAGN,KAAK,CAACM,IAAtC;EAAA,IAA4CC,SAAS,GAAGP,KAAK,CAACO,SAA9D;EAAA,IAAyEC,aAAa,GAAGR,KAAK,CAACQ,aAA/F;EAAA,IAA8GC,eAAe,GAAGT,KAAK,CAACS,eAAtI,CAFsE,CAGtE;EACA;EACA;;EACAD,aAAa,CAACE,MAAd,GAAuB,CAAvB,CANsE,CAOtE;;EACA,IAAIC,YAAY,GAAG,KAAnB;EACA,IAAIC,kBAAkB,GAAG,KAAzB,CATsE,CAUtE;;EACA,IAAIC,eAAe,GAAG,IAAtB;EACA;AACJ;AACA;AACA;AACA;AACA;;EACI,KAAK,IAAIC,GAAT,IAAgBb,YAAhB,EAA8B;IAC1B,IAAIc,KAAK,GAAGd,YAAY,CAACa,GAAD,CAAxB;IACA;AACR;AACA;;IACQ,IAAIpB,aAAa,CAACoB,GAAD,CAAjB,EAAwB;MACpBR,IAAI,CAACQ,GAAD,CAAJ,GAAYC,KAAZ;MACA;IACH,CARyB,CAS1B;;;IACA,IAAIC,SAAS,GAAGlB,gBAAgB,CAACgB,GAAD,CAAhC;IACA,IAAIG,WAAW,GAAGpB,cAAc,CAACkB,KAAD,EAAQC,SAAR,CAAhC;;IACA,IAAIrB,eAAe,CAACmB,GAAD,CAAnB,EAA0B;MACtB;MACAH,YAAY,GAAG,IAAf;MACAJ,SAAS,CAACO,GAAD,CAAT,GAAiBG,WAAjB;MACAT,aAAa,CAACU,IAAd,CAAmBJ,GAAnB,EAJsB,CAKtB;;MACA,IAAI,CAACD,eAAL,EACI,SAPkB,CAQtB;;MACA,IAAIE,KAAK,MAAM,CAACX,EAAE,GAAGY,SAAS,CAACG,OAAhB,MAA6B,IAA7B,IAAqCf,EAAE,KAAK,KAAK,CAAjD,GAAqDA,EAArD,GAA0D,CAAhE,CAAT,EACIS,eAAe,GAAG,KAAlB;IACP,CAXD,MAYK,IAAIjB,qBAAqB,CAACkB,GAAD,CAAzB,EAAgC;MACjCL,eAAe,CAACK,GAAD,CAAf,GAAuBG,WAAvB,CADiC,CAEjC;;MACAL,kBAAkB,GAAG,IAArB;IACH,CAJI,MAKA;MACDP,KAAK,CAACS,GAAD,CAAL,GAAaG,WAAb;IACH;EACJ;;EACD,IAAIN,YAAJ,EAAkB;IACdN,KAAK,CAACE,SAAN,GAAkBf,cAAc,CAACQ,KAAD,EAAQE,OAAR,EAAiBW,eAAjB,EAAkCV,iBAAlC,CAAhC;EACH,CAFD,MAGK,IAAIA,iBAAJ,EAAuB;IACxBE,KAAK,CAACE,SAAN,GAAkBJ,iBAAiB,CAAC,EAAD,EAAK,EAAL,CAAnC;EACH,CAFI,MAGA,IAAI,CAACF,YAAY,CAACM,SAAd,IAA2BF,KAAK,CAACE,SAArC,EAAgD;IACjDF,KAAK,CAACE,SAAN,GAAkB,MAAlB;EACH;;EACD,IAAIK,kBAAJ,EAAwB;IACpBP,KAAK,CAACI,eAAN,GAAwBhB,oBAAoB,CAACgB,eAAD,CAA5C;EACH;AACJ;;AAED,SAASV,eAAT"},"metadata":{},"sourceType":"module"}