{"ast":null,"code":"import { __extends, __assign, __read } from 'tslib';\nimport sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nvar MeasureLayoutWithContext =\n/** @class */\nfunction (_super) {\n  __extends(MeasureLayoutWithContext, _super);\n\n  function MeasureLayoutWithContext() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * This only mounts projection nodes for components that\n   * need measuring, we might want to do it for all components\n   * in order to incorporate transforms\n   */\n\n\n  MeasureLayoutWithContext.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var _a = this.props,\n        visualElement = _a.visualElement,\n        layoutGroup = _a.layoutGroup,\n        switchLayoutGroup = _a.switchLayoutGroup,\n        layoutId = _a.layoutId;\n    var projection = visualElement.projection;\n    addScaleCorrector(defaultScaleCorrectors);\n\n    if (projection) {\n      if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group) layoutGroup.group.add(projection);\n\n      if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n        switchLayoutGroup.register(projection);\n      }\n\n      projection.root.didUpdate();\n      projection.addEventListener(\"animationComplete\", function () {\n        _this.safeToRemove();\n      });\n      projection.setOptions(__assign(__assign({}, projection.options), {\n        onExitComplete: function () {\n          return _this.safeToRemove();\n        }\n      }));\n    }\n\n    globalProjectionState.hasEverUpdated = true;\n  };\n\n  MeasureLayoutWithContext.prototype.getSnapshotBeforeUpdate = function (prevProps) {\n    var _this = this;\n\n    var _a = this.props,\n        layoutDependency = _a.layoutDependency,\n        visualElement = _a.visualElement,\n        drag = _a.drag,\n        isPresent = _a.isPresent;\n    var projection = visualElement.projection;\n    if (!projection) return null;\n    /**\n     * TODO: We use this data in relegate to determine whether to\n     * promote a previous element. There's no guarantee its presence data\n     * will have updated by this point - if a bug like this arises it will\n     * have to be that we markForRelegation and then find a new lead some other way,\n     * perhaps in didUpdate\n     */\n\n    projection.isPresent = isPresent;\n\n    if (drag || prevProps.layoutDependency !== layoutDependency || layoutDependency === undefined) {\n      projection.willUpdate();\n    } else {\n      this.safeToRemove();\n    }\n\n    if (prevProps.isPresent !== isPresent) {\n      if (isPresent) {\n        projection.promote();\n      } else if (!projection.relegate()) {\n        /**\n         * If there's another stack member taking over from this one,\n         * it's in charge of the exit animation and therefore should\n         * be in charge of the safe to remove. Otherwise we call it here.\n         */\n        sync.postRender(function () {\n          var _a;\n\n          if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n            _this.safeToRemove();\n          }\n        });\n      }\n    }\n\n    return null;\n  };\n\n  MeasureLayoutWithContext.prototype.componentDidUpdate = function () {\n    var projection = this.props.visualElement.projection;\n\n    if (projection) {\n      projection.root.didUpdate();\n\n      if (!projection.currentAnimation && projection.isLead()) {\n        this.safeToRemove();\n      }\n    }\n  };\n\n  MeasureLayoutWithContext.prototype.componentWillUnmount = function () {\n    var _a = this.props,\n        visualElement = _a.visualElement,\n        layoutGroup = _a.layoutGroup,\n        promoteContext = _a.switchLayoutGroup;\n    var projection = visualElement.projection;\n\n    if (projection) {\n      projection.scheduleCheckAfterUnmount();\n      if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group) layoutGroup.group.remove(projection);\n      if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister) promoteContext.deregister(projection);\n    }\n  };\n\n  MeasureLayoutWithContext.prototype.safeToRemove = function () {\n    var safeToRemove = this.props.safeToRemove;\n    safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n  };\n\n  MeasureLayoutWithContext.prototype.render = function () {\n    return null;\n  };\n\n  return MeasureLayoutWithContext;\n}(React__default.Component);\n\nfunction MeasureLayout(props) {\n  var _a = __read(usePresence(), 2),\n      isPresent = _a[0],\n      safeToRemove = _a[1];\n\n  var layoutGroup = useContext(LayoutGroupContext);\n  return React__default.createElement(MeasureLayoutWithContext, __assign({}, props, {\n    layoutGroup: layoutGroup,\n    switchLayoutGroup: useContext(SwitchLayoutGroupContext),\n    isPresent: isPresent,\n    safeToRemove: safeToRemove\n  }));\n}\n\nvar defaultScaleCorrectors = {\n  borderRadius: __assign(__assign({}, correctBorderRadius), {\n    applyTo: [\"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomLeftRadius\", \"borderBottomRightRadius\"]\n  }),\n  borderTopLeftRadius: correctBorderRadius,\n  borderTopRightRadius: correctBorderRadius,\n  borderBottomLeftRadius: correctBorderRadius,\n  borderBottomRightRadius: correctBorderRadius,\n  boxShadow: correctBoxShadow\n};\nexport { MeasureLayout };","map":{"version":3,"names":["__extends","__assign","__read","sync","React__default","useContext","usePresence","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","correctBorderRadius","correctBoxShadow","addScaleCorrector","MeasureLayoutWithContext","_super","apply","arguments","prototype","componentDidMount","_this","_a","props","visualElement","layoutGroup","switchLayoutGroup","layoutId","projection","defaultScaleCorrectors","group","add","register","root","didUpdate","addEventListener","safeToRemove","setOptions","options","onExitComplete","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","drag","isPresent","undefined","willUpdate","promote","relegate","postRender","getStack","members","length","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","render","Component","MeasureLayout","createElement","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow"],"sources":["C:/Users/Tejaswini Mahale/Desktop/Hubspot/hubspot/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"],"sourcesContent":["import { __extends, __assign, __read } from 'tslib';\nimport sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nvar MeasureLayoutWithContext = /** @class */ (function (_super) {\n    __extends(MeasureLayoutWithContext, _super);\n    function MeasureLayoutWithContext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    MeasureLayoutWithContext.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;\n        var projection = visualElement.projection;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", function () {\n                _this.safeToRemove();\n            });\n            projection.setOptions(__assign(__assign({}, projection.options), { onExitComplete: function () { return _this.safeToRemove(); } }));\n        }\n        globalProjectionState.hasEverUpdated = true;\n    };\n    MeasureLayoutWithContext.prototype.getSnapshotBeforeUpdate = function (prevProps) {\n        var _this = this;\n        var _a = this.props, layoutDependency = _a.layoutDependency, visualElement = _a.visualElement, drag = _a.drag, isPresent = _a.isPresent;\n        var projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(function () {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        _this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    };\n    MeasureLayoutWithContext.prototype.componentDidUpdate = function () {\n        var projection = this.props.visualElement.projection;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    };\n    MeasureLayoutWithContext.prototype.componentWillUnmount = function () {\n        var _a = this.props, visualElement = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;\n        var projection = visualElement.projection;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    };\n    MeasureLayoutWithContext.prototype.safeToRemove = function () {\n        var safeToRemove = this.props.safeToRemove;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    };\n    MeasureLayoutWithContext.prototype.render = function () {\n        return null;\n    };\n    return MeasureLayoutWithContext;\n}(React__default.Component));\nfunction MeasureLayout(props) {\n    var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];\n    var layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, __assign({}, props, { layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove })));\n}\nvar defaultScaleCorrectors = {\n    borderRadius: __assign(__assign({}, correctBorderRadius), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP,IAAyBC,UAAzB,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,sDAA5B;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,SAASC,wBAAT,QAAyC,+CAAzC;AACA,SAASC,qBAAT,QAAsC,oCAAtC;AACA,SAASC,mBAAT,QAAoC,oDAApC;AACA,SAASC,gBAAT,QAAiC,iDAAjC;AACA,SAASC,iBAAT,QAAkC,iDAAlC;;AAEA,IAAIC,wBAAwB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC5Dd,SAAS,CAACa,wBAAD,EAA2BC,MAA3B,CAAT;;EACA,SAASD,wBAAT,GAAoC;IAChC,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIH,wBAAwB,CAACI,SAAzB,CAAmCC,iBAAnC,GAAuD,YAAY;IAC/D,IAAIC,KAAK,GAAG,IAAZ;;IACA,IAAIC,EAAE,GAAG,KAAKC,KAAd;IAAA,IAAqBC,aAAa,GAAGF,EAAE,CAACE,aAAxC;IAAA,IAAuDC,WAAW,GAAGH,EAAE,CAACG,WAAxE;IAAA,IAAqFC,iBAAiB,GAAGJ,EAAE,CAACI,iBAA5G;IAAA,IAA+HC,QAAQ,GAAGL,EAAE,CAACK,QAA7I;IACA,IAAIC,UAAU,GAAGJ,aAAa,CAACI,UAA/B;IACAd,iBAAiB,CAACe,sBAAD,CAAjB;;IACA,IAAID,UAAJ,EAAgB;MACZ,IAAIH,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACK,KAA1E,EACIL,WAAW,CAACK,KAAZ,CAAkBC,GAAlB,CAAsBH,UAAtB;;MACJ,IAAI,CAACF,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACM,QAAzF,KAAsGL,QAA1G,EAAoH;QAChHD,iBAAiB,CAACM,QAAlB,CAA2BJ,UAA3B;MACH;;MACDA,UAAU,CAACK,IAAX,CAAgBC,SAAhB;MACAN,UAAU,CAACO,gBAAX,CAA4B,mBAA5B,EAAiD,YAAY;QACzDd,KAAK,CAACe,YAAN;MACH,CAFD;MAGAR,UAAU,CAACS,UAAX,CAAsBlC,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKyB,UAAU,CAACU,OAAhB,CAAT,EAAmC;QAAEC,cAAc,EAAE,YAAY;UAAE,OAAOlB,KAAK,CAACe,YAAN,EAAP;QAA8B;MAA9D,CAAnC,CAA9B;IACH;;IACDzB,qBAAqB,CAAC6B,cAAtB,GAAuC,IAAvC;EACH,CAlBD;;EAmBAzB,wBAAwB,CAACI,SAAzB,CAAmCsB,uBAAnC,GAA6D,UAAUC,SAAV,EAAqB;IAC9E,IAAIrB,KAAK,GAAG,IAAZ;;IACA,IAAIC,EAAE,GAAG,KAAKC,KAAd;IAAA,IAAqBoB,gBAAgB,GAAGrB,EAAE,CAACqB,gBAA3C;IAAA,IAA6DnB,aAAa,GAAGF,EAAE,CAACE,aAAhF;IAAA,IAA+FoB,IAAI,GAAGtB,EAAE,CAACsB,IAAzG;IAAA,IAA+GC,SAAS,GAAGvB,EAAE,CAACuB,SAA9H;IACA,IAAIjB,UAAU,GAAGJ,aAAa,CAACI,UAA/B;IACA,IAAI,CAACA,UAAL,EACI,OAAO,IAAP;IACJ;AACR;AACA;AACA;AACA;AACA;AACA;;IACQA,UAAU,CAACiB,SAAX,GAAuBA,SAAvB;;IACA,IAAID,IAAI,IACJF,SAAS,CAACC,gBAAV,KAA+BA,gBAD/B,IAEAA,gBAAgB,KAAKG,SAFzB,EAEoC;MAChClB,UAAU,CAACmB,UAAX;IACH,CAJD,MAKK;MACD,KAAKX,YAAL;IACH;;IACD,IAAIM,SAAS,CAACG,SAAV,KAAwBA,SAA5B,EAAuC;MACnC,IAAIA,SAAJ,EAAe;QACXjB,UAAU,CAACoB,OAAX;MACH,CAFD,MAGK,IAAI,CAACpB,UAAU,CAACqB,QAAX,EAAL,EAA4B;QAC7B;AAChB;AACA;AACA;AACA;QACgB5C,IAAI,CAAC6C,UAAL,CAAgB,YAAY;UACxB,IAAI5B,EAAJ;;UACA,IAAI,EAAE,CAACA,EAAE,GAAGM,UAAU,CAACuB,QAAX,EAAN,MAAiC,IAAjC,IAAyC7B,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,EAAE,CAAC8B,OAAH,CAAWC,MAA/E,CAAJ,EAA4F;YACxFhC,KAAK,CAACe,YAAN;UACH;QACJ,CALD;MAMH;IACJ;;IACD,OAAO,IAAP;EACH,CAzCD;;EA0CArB,wBAAwB,CAACI,SAAzB,CAAmCmC,kBAAnC,GAAwD,YAAY;IAChE,IAAI1B,UAAU,GAAG,KAAKL,KAAL,CAAWC,aAAX,CAAyBI,UAA1C;;IACA,IAAIA,UAAJ,EAAgB;MACZA,UAAU,CAACK,IAAX,CAAgBC,SAAhB;;MACA,IAAI,CAACN,UAAU,CAAC2B,gBAAZ,IAAgC3B,UAAU,CAAC4B,MAAX,EAApC,EAAyD;QACrD,KAAKpB,YAAL;MACH;IACJ;EACJ,CARD;;EASArB,wBAAwB,CAACI,SAAzB,CAAmCsC,oBAAnC,GAA0D,YAAY;IAClE,IAAInC,EAAE,GAAG,KAAKC,KAAd;IAAA,IAAqBC,aAAa,GAAGF,EAAE,CAACE,aAAxC;IAAA,IAAuDC,WAAW,GAAGH,EAAE,CAACG,WAAxE;IAAA,IAAqFiC,cAAc,GAAGpC,EAAE,CAACI,iBAAzG;IACA,IAAIE,UAAU,GAAGJ,aAAa,CAACI,UAA/B;;IACA,IAAIA,UAAJ,EAAgB;MACZA,UAAU,CAAC+B,yBAAX;MACA,IAAIlC,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACK,KAA1E,EACIL,WAAW,CAACK,KAAZ,CAAkB8B,MAAlB,CAAyBhC,UAAzB;MACJ,IAAI8B,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACG,UAAnF,EACIH,cAAc,CAACG,UAAf,CAA0BjC,UAA1B;IACP;EACJ,CAVD;;EAWAb,wBAAwB,CAACI,SAAzB,CAAmCiB,YAAnC,GAAkD,YAAY;IAC1D,IAAIA,YAAY,GAAG,KAAKb,KAAL,CAAWa,YAA9B;IACAA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,EAAxE;EACH,CAHD;;EAIArB,wBAAwB,CAACI,SAAzB,CAAmC2C,MAAnC,GAA4C,YAAY;IACpD,OAAO,IAAP;EACH,CAFD;;EAGA,OAAO/C,wBAAP;AACH,CAnG6C,CAmG5CT,cAAc,CAACyD,SAnG6B,CAA9C;;AAoGA,SAASC,aAAT,CAAuBzC,KAAvB,EAA8B;EAC1B,IAAID,EAAE,GAAGlB,MAAM,CAACI,WAAW,EAAZ,EAAgB,CAAhB,CAAf;EAAA,IAAmCqC,SAAS,GAAGvB,EAAE,CAAC,CAAD,CAAjD;EAAA,IAAsDc,YAAY,GAAGd,EAAE,CAAC,CAAD,CAAvE;;EACA,IAAIG,WAAW,GAAGlB,UAAU,CAACE,kBAAD,CAA5B;EACA,OAAQH,cAAc,CAAC2D,aAAf,CAA6BlD,wBAA7B,EAAuDZ,QAAQ,CAAC,EAAD,EAAKoB,KAAL,EAAY;IAAEE,WAAW,EAAEA,WAAf;IAA4BC,iBAAiB,EAAEnB,UAAU,CAACG,wBAAD,CAAzD;IAAqFmC,SAAS,EAAEA,SAAhG;IAA2GT,YAAY,EAAEA;EAAzH,CAAZ,CAA/D,CAAR;AACH;;AACD,IAAIP,sBAAsB,GAAG;EACzBqC,YAAY,EAAE/D,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKS,mBAAL,CAAT,EAAoC;IAAEuD,OAAO,EAAE,CAC7D,qBAD6D,EAE7D,sBAF6D,EAG7D,wBAH6D,EAI7D,yBAJ6D;EAAX,CAApC,CADG;EAOzBC,mBAAmB,EAAExD,mBAPI;EAQzByD,oBAAoB,EAAEzD,mBARG;EASzB0D,sBAAsB,EAAE1D,mBATC;EAUzB2D,uBAAuB,EAAE3D,mBAVA;EAWzB4D,SAAS,EAAE3D;AAXc,CAA7B;AAcA,SAASmD,aAAT"},"metadata":{},"sourceType":"module"}