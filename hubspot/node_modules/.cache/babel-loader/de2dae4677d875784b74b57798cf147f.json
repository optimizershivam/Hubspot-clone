{"ast":null,"code":"/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\n\nexport function parseDateTimeSkeleton(skeleton) {\n  var result = {};\n  skeleton.replace(DATE_TIME_REGEX, function (match) {\n    var len = match.length;\n\n    switch (match[0]) {\n      // Era\n      case 'G':\n        result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n        break;\n      // Year\n\n      case 'y':\n        result.year = len === 2 ? '2-digit' : 'numeric';\n        break;\n\n      case 'Y':\n      case 'u':\n      case 'U':\n      case 'r':\n        throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n      // Quarter\n\n      case 'q':\n      case 'Q':\n        throw new RangeError('`q/Q` (quarter) patterns are not supported');\n      // Month\n\n      case 'M':\n      case 'L':\n        result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n        break;\n      // Week\n\n      case 'w':\n      case 'W':\n        throw new RangeError('`w/W` (week) patterns are not supported');\n\n      case 'd':\n        result.day = ['numeric', '2-digit'][len - 1];\n        break;\n\n      case 'D':\n      case 'F':\n      case 'g':\n        throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n      // Weekday\n\n      case 'E':\n        result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n        break;\n\n      case 'e':\n        if (len < 4) {\n          throw new RangeError('`e..eee` (weekday) patterns are not supported');\n        }\n\n        result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n        break;\n\n      case 'c':\n        if (len < 4) {\n          throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n        }\n\n        result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n        break;\n      // Period\n\n      case 'a':\n        // AM, PM\n        result.hour12 = true;\n        break;\n\n      case 'b': // am, pm, noon, midnight\n\n      case 'B':\n        // flexible day periods\n        throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n      // Hour\n\n      case 'h':\n        result.hourCycle = 'h12';\n        result.hour = ['numeric', '2-digit'][len - 1];\n        break;\n\n      case 'H':\n        result.hourCycle = 'h23';\n        result.hour = ['numeric', '2-digit'][len - 1];\n        break;\n\n      case 'K':\n        result.hourCycle = 'h11';\n        result.hour = ['numeric', '2-digit'][len - 1];\n        break;\n\n      case 'k':\n        result.hourCycle = 'h24';\n        result.hour = ['numeric', '2-digit'][len - 1];\n        break;\n\n      case 'j':\n      case 'J':\n      case 'C':\n        throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n      // Minute\n\n      case 'm':\n        result.minute = ['numeric', '2-digit'][len - 1];\n        break;\n      // Second\n\n      case 's':\n        result.second = ['numeric', '2-digit'][len - 1];\n        break;\n\n      case 'S':\n      case 'A':\n        throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');\n      // Zone\n\n      case 'z':\n        // 1..3, 4: specific non-location format\n        result.timeZoneName = len < 4 ? 'short' : 'long';\n        break;\n\n      case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n\n      case 'O': // 1, 4: miliseconds in day short, long\n\n      case 'v': // 1, 4: generic non-location format\n\n      case 'V': // 1, 2, 3, 4: time zone ID or city\n\n      case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n\n      case 'x':\n        // 1, 2, 3, 4: The ISO8601 varios formats\n        throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');\n    }\n\n    return '';\n  });\n  return result;\n}","map":{"version":3,"names":["DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","result","replace","match","len","length","era","year","RangeError","month","day","weekday","hour12","hourCycle","hour","minute","second","timeZoneName"],"sources":["C:/Users/Tejaswini Mahale/Desktop/Hubspot/hubspot/node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js"],"sourcesContent":["/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}