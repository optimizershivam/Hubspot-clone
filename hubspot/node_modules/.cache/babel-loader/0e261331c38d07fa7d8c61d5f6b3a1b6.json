{"ast":null,"code":"import { useConstant } from './use-constant.mjs';\nvar counter = 0;\n\nvar incrementId = function () {\n  return counter++;\n};\n\nvar useId = function () {\n  return useConstant(incrementId);\n};\n/**\n * Ideally we'd use the following code to support React 18 optionally.\n * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).\n * Need to come up with a different way of figuring this out.\n */\n// export const useId = (React as any).useId\n//     ? (React as any).useId\n//     : () => useConstant(incrementId)\n\n\nexport { useId };","map":{"version":3,"names":["useConstant","counter","incrementId","useId"],"sources":["C:/Users/Tejaswini Mahale/Desktop/boorish-earthquake-4077/hubspot/node_modules/framer-motion/dist/es/utils/use-id.mjs"],"sourcesContent":["import { useConstant } from './use-constant.mjs';\n\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useId = function () { return useConstant(incrementId); };\n/**\n * Ideally we'd use the following code to support React 18 optionally.\n * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).\n * Need to come up with a different way of figuring this out.\n */\n// export const useId = (React as any).useId\n//     ? (React as any).useId\n//     : () => useConstant(incrementId)\n\nexport { useId };\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B;AAEA,IAAIC,OAAO,GAAG,CAAd;;AACA,IAAIC,WAAW,GAAG,YAAY;EAAE,OAAOD,OAAO,EAAd;AAAmB,CAAnD;;AACA,IAAIE,KAAK,GAAG,YAAY;EAAE,OAAOH,WAAW,CAACE,WAAD,CAAlB;AAAkC,CAA5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,KAAT"},"metadata":{},"sourceType":"module"}