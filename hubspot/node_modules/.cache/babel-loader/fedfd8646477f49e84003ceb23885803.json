{"ast":null,"code":"import { __read } from 'tslib';\nimport { clamp, mix, progress } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\n\nfunction applyConstraints(point, _a, elastic) {\n  var min = _a.min,\n      max = _a.max;\n\n  if (min !== undefined && point < min) {\n    // If we have a min point defined, and this is outside of that, constrain\n    point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n  } else if (max !== undefined && point > max) {\n    // If we have a max point defined, and this is outside of that, constrain\n    point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n  }\n\n  return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\n\n\nfunction calcRelativeAxisConstraints(axis, min, max) {\n  return {\n    min: min !== undefined ? axis.min + min : undefined,\n    max: max !== undefined ? axis.max + max - (axis.max - axis.min) : undefined\n  };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\n\n\nfunction calcRelativeConstraints(layoutBox, _a) {\n  var top = _a.top,\n      left = _a.left,\n      bottom = _a.bottom,\n      right = _a.right;\n  return {\n    x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)\n  };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\n\n\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n  var _a;\n\n  var min = constraintsAxis.min - layoutAxis.min;\n  var max = constraintsAxis.max - layoutAxis.max; // If the constraints axis is actually smaller than the layout axis then we can\n  // flip the constraints\n\n  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {\n    _a = __read([max, min], 2), min = _a[0], max = _a[1];\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\n\n\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n  return {\n    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)\n  };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\n\n\nfunction calcOrigin(source, target) {\n  var origin = 0.5;\n  var sourceLength = calcLength(source);\n  var targetLength = calcLength(target);\n\n  if (targetLength > sourceLength) {\n    origin = progress(target.min, target.max - sourceLength, source.min);\n  } else if (sourceLength > targetLength) {\n    origin = progress(source.min, source.max - targetLength, target.min);\n  }\n\n  return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\n\n\nfunction rebaseAxisConstraints(layout, constraints) {\n  var relativeConstraints = {};\n\n  if (constraints.min !== undefined) {\n    relativeConstraints.min = constraints.min - layout.min;\n  }\n\n  if (constraints.max !== undefined) {\n    relativeConstraints.max = constraints.max - layout.min;\n  }\n\n  return relativeConstraints;\n}\n\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\n\nfunction resolveDragElastic(dragElastic) {\n  if (dragElastic === void 0) {\n    dragElastic = defaultElastic;\n  }\n\n  if (dragElastic === false) {\n    dragElastic = 0;\n  } else if (dragElastic === true) {\n    dragElastic = defaultElastic;\n  }\n\n  return {\n    x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n    y: resolveAxisElastic(dragElastic, \"top\", \"bottom\")\n  };\n}\n\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n  return {\n    min: resolvePointElastic(dragElastic, minLabel),\n    max: resolvePointElastic(dragElastic, maxLabel)\n  };\n}\n\nfunction resolvePointElastic(dragElastic, label) {\n  var _a;\n\n  return typeof dragElastic === \"number\" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };","map":{"version":3,"names":["__read","clamp","mix","progress","calcLength","applyConstraints","point","_a","elastic","min","max","undefined","Math","calcRelativeAxisConstraints","axis","calcRelativeConstraints","layoutBox","top","left","bottom","right","x","y","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","source","target","origin","sourceLength","targetLength","rebaseAxisConstraints","layout","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label"],"sources":["C:/Users/Tejaswini Mahale/Desktop/boorish-earthquake-4077/hubspot/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs"],"sourcesContent":["import { __read } from 'tslib';\nimport { clamp, mix, progress } from 'popmotion';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = __read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return { min: min, max: max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === void 0) { dragElastic = defaultElastic; }\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}