{"ast":null,"code":"function hueToRgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction hslaToRgba(_ref) {\n  let {\n    hue,\n    saturation,\n    lightness,\n    alpha\n  } = _ref;\n  hue /= 360;\n  saturation /= 100;\n  lightness /= 100;\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n\n  if (!saturation) {\n    red = green = blue = lightness;\n  } else {\n    const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;\n    const p = 2 * lightness - q;\n    red = hueToRgb(p, q, hue + 1 / 3);\n    green = hueToRgb(p, q, hue);\n    blue = hueToRgb(p, q, hue - 1 / 3);\n  }\n\n  return {\n    red: Math.round(red * 255),\n    green: Math.round(green * 255),\n    blue: Math.round(blue * 255),\n    alpha\n  };\n}\n\nexport { hslaToRgba };","map":{"version":3,"names":["hueToRgb","p","q","t","hslaToRgba","hue","saturation","lightness","alpha","red","green","blue","Math","round"],"sources":["C:/Users/Tejaswini Mahale/Desktop/Hubspot/hubspot/node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs"],"sourcesContent":["function hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;EACvB,IAAIA,CAAC,GAAG,CAAR,EACIA,CAAC,IAAI,CAAL;EACJ,IAAIA,CAAC,GAAG,CAAR,EACIA,CAAC,IAAI,CAAL;EACJ,IAAIA,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,IAAU,CAAV,GAAcE,CAAzB;EACJ,IAAIA,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOD,CAAP;EACJ,IAAIC,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,KAAW,IAAI,CAAJ,GAAQE,CAAnB,IAAwB,CAAnC;EACJ,OAAOF,CAAP;AACH;;AACD,SAASG,UAAT,OAA2D;EAAA,IAAvC;IAAEC,GAAF;IAAOC,UAAP;IAAmBC,SAAnB;IAA8BC;EAA9B,CAAuC;EACvDH,GAAG,IAAI,GAAP;EACAC,UAAU,IAAI,GAAd;EACAC,SAAS,IAAI,GAAb;EACA,IAAIE,GAAG,GAAG,CAAV;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,IAAI,GAAG,CAAX;;EACA,IAAI,CAACL,UAAL,EAAiB;IACbG,GAAG,GAAGC,KAAK,GAAGC,IAAI,GAAGJ,SAArB;EACH,CAFD,MAGK;IACD,MAAML,CAAC,GAAGK,SAAS,GAAG,GAAZ,GACJA,SAAS,IAAI,IAAID,UAAR,CADL,GAEJC,SAAS,GAAGD,UAAZ,GAAyBC,SAAS,GAAGD,UAF3C;IAGA,MAAML,CAAC,GAAG,IAAIM,SAAJ,GAAgBL,CAA1B;IACAO,GAAG,GAAGT,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAG,GAAG,IAAI,CAAjB,CAAd;IACAK,KAAK,GAAGV,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAP,CAAhB;IACAM,IAAI,GAAGX,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAG,GAAG,IAAI,CAAjB,CAAf;EACH;;EACD,OAAO;IACHI,GAAG,EAAEG,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,GAAjB,CADF;IAEHC,KAAK,EAAEE,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,GAAnB,CAFJ;IAGHC,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,GAAlB,CAHH;IAIHH;EAJG,CAAP;AAMH;;AAED,SAASJ,UAAT"},"metadata":{},"sourceType":"module"}